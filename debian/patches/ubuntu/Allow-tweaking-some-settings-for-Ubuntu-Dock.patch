From: Ubuntu Developers <ubuntu-devel-discuss@lists.ubuntu.com>
Date: Wed, 15 Jan 2020 16:56:17 +1300
Subject: ubuntu-panel: Allow tweaking some Ubuntu specific settings

Expose some of the settings that most users will find useful for our
Ubuntu Dock installation. Those are located in its own panel for now:
* change intellihide true/hide mode
* change dock icon size
* modify placement of the launcher (all monitor, primary or any monitors)
Origin: ubuntu
Forwarded: not-needed
---
 panels/meson.build                             |    1 +
 panels/ubuntu/cc-ubuntu-panel.c                | 1020 ++++++++++++++++++++++++
 panels/ubuntu/cc-ubuntu-panel.h                |   35 +
 panels/ubuntu/cc-ubuntu-panel.ui               |  228 ++++++
 panels/ubuntu/gnome-ubuntu-panel.desktop.in.in |   16 +
 panels/ubuntu/meson.build                      |   41 +
 panels/ubuntu/theme-dark.svg                   |  381 +++++++++
 panels/ubuntu/theme-light.svg                  |  380 +++++++++
 panels/ubuntu/ubuntu.gresource.xml             |    8 +
 po/POTFILES.in                                 |    3 +
 shell/cc-panel-list.c                          |    1 +
 shell/cc-panel-loader.c                        |    3 +
 12 files changed, 2117 insertions(+)
 create mode 100644 panels/ubuntu/cc-ubuntu-panel.c
 create mode 100644 panels/ubuntu/cc-ubuntu-panel.h
 create mode 100644 panels/ubuntu/cc-ubuntu-panel.ui
 create mode 100644 panels/ubuntu/gnome-ubuntu-panel.desktop.in.in
 create mode 100644 panels/ubuntu/meson.build
 create mode 100644 panels/ubuntu/theme-dark.svg
 create mode 100644 panels/ubuntu/theme-light.svg
 create mode 100644 panels/ubuntu/ubuntu.gresource.xml

diff --git a/panels/meson.build b/panels/meson.build
index f603db9..c21910a 100644
--- a/panels/meson.build
+++ b/panels/meson.build
@@ -25,6 +25,7 @@ panels = [
   'search',
   'sharing',
   'sound',
+  'ubuntu',
   'universal-access',
   'usage',
   'user-accounts',
diff --git a/panels/ubuntu/cc-ubuntu-panel.c b/panels/ubuntu/cc-ubuntu-panel.c
new file mode 100644
index 0000000..8de4584
--- /dev/null
+++ b/panels/ubuntu/cc-ubuntu-panel.c
@@ -0,0 +1,1020 @@
+/* -*- mode: C; c-file-style: "gnu"; indent-tabs-mode: nil; -*- */
+/*
+ * Copyright (C) 2017-2020 Canonical Ltd
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 2 of the License, or (at your option) any later version.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General
+ * Public License along with this library; if not, see <http://www.gnu.org/licenses/>.
+ *
+ */
+
+#include "config.h"
+
+#include <string.h>
+#include <glib/gi18n-lib.h>
+#include <glib.h>
+#include <gio/gio.h>
+#include <gio/gdesktopappinfo.h>
+#include <libhandy-1/handy.h>
+
+#include "list-box-helper.h"
+#include "cc-ubuntu-panel.h"
+#include "cc-ubuntu-resources.h"
+#include "shell/cc-application.h"
+#include "shell/cc-object-storage.h"
+
+#include "panels/display/cc-display-config-manager-dbus.h"
+#include "panels/display/cc-display-config.h"
+
+#define MIN_ICONSIZE 16.0
+#define MAX_ICONSIZE 64.0
+#define DEFAULT_ICONSIZE 48.0
+#define ICONSIZE_KEY "dash-max-icon-size"
+
+#define UBUNTU_DOCK_SCHEMA "org.gnome.shell.extensions.dash-to-dock"
+#define UBUNTU_DOCK_ALL_MONITORS_KEY "multi-monitor"
+#define UBUNTU_DOCK_PREFERRED_MONITOR_KEY "preferred-monitor"
+#define UBUNTU_DOCK_PREFERRED_CONNECTOR_KEY "preferred-monitor-by-connector"
+
+/*
+ * This allows to migrate settings from 'preferred-monitor' to
+ * 'preferred-monitor-by-connector', and can be removed after 22.04
+ * simplifying all the logic, by relying on connector names only.
+ */
+#define UBUNTU_DOCK_MONITOR_INDEX_USE_CONNECTOR -2
+
+#define INTERFACE_SCHEMA "org.gnome.desktop.interface"
+#define GTK_THEME_KEY "gtk-theme"
+#define CURSOR_THEME_KEY "cursor-theme"
+#define ICON_THEME_KEY "icon-theme"
+
+#define GEDIT_PREFRENCES_SCHEMA "org.gnome.gedit.preferences.editor"
+#define GEDIT_THEME_KEY "scheme"
+
+struct _CcUbuntuPanel {
+  CcPanel                 parent_instance;
+
+  HdyPreferencesGroup    *dock_preferences_group;
+  GtkSwitch              *dock_autohide_switch;
+  HdyComboRow            *dock_monitor_row;
+  GListStore             *dock_monitors_liststore;
+  HdyComboRow            *dock_position_row;
+  GtkAdjustment          *icon_size_adjustment;
+  GtkScale               *icon_size_scale;
+  GtkFlowBox             *theme_box;
+  GtkFlowBoxChild        *theme_dark;
+  GtkFlowBoxChild        *theme_light;
+
+  GSettings              *dock_settings;
+  GSettings              *interface_settings;
+  GSettings              *gedit_settings;
+  CcDisplayConfigManager *display_config_manager;
+  CcDisplayConfig        *display_current_config;
+  GDBusProxy             *shell_proxy;
+
+  gboolean                updating;
+};
+
+CC_PANEL_REGISTER (CcUbuntuPanel, cc_ubuntu_panel);
+
+static void monitor_labeler_hide (CcUbuntuPanel *self);
+static void update_dock_monitor_combo_row_selection (CcUbuntuPanel *self);
+
+static void
+cc_ubuntu_panel_dispose (GObject *object)
+{
+  CcUbuntuPanel *self = CC_UBUNTU_PANEL (object);
+
+  monitor_labeler_hide (self);
+
+  /* Upstream code is wrong at handling configuration finalization if happens
+   * earlier than one of its child nodes, so we need to remove the entries
+   * not to make this happen implicitly too late, causing a crash.
+   * This can be removed when the follow MR is merged:
+   * https://gitlab.gnome.org/GNOME/gnome-control-center/-/merge_requests/1175
+   */
+  g_list_store_remove_all (self->dock_monitors_liststore);
+
+  g_clear_object (&self->dock_settings);
+  g_clear_object (&self->dock_monitors_liststore);
+  g_clear_object (&self->interface_settings);
+  g_clear_object (&self->gedit_settings);
+  g_clear_object (&self->display_current_config);
+  g_clear_object (&self->display_config_manager);
+  g_clear_object (&self->shell_proxy);
+
+  G_OBJECT_CLASS (cc_ubuntu_panel_parent_class)->dispose (object);
+}
+
+static void
+monitor_labeler_hide (CcUbuntuPanel *self)
+{
+  if (!self->shell_proxy)
+    return;
+
+  g_dbus_proxy_call (self->shell_proxy,
+                     "HideMonitorLabels",
+                     NULL, G_DBUS_CALL_FLAGS_NONE,
+                     -1, NULL, NULL, NULL);
+}
+
+static void
+monitor_labeler_show (CcUbuntuPanel *self)
+{
+  GList *outputs, *l;
+  GVariantBuilder builder;
+  gint number = 0;
+  guint n_monitors = 0;
+
+  if (!self->shell_proxy || !self->display_config_manager)
+    return;
+
+  outputs = cc_display_config_get_ui_sorted_monitors (self->display_current_config);
+  if (!outputs)
+    return;
+
+  if (cc_display_config_is_cloning (self->display_current_config))
+    return monitor_labeler_hide (self);
+
+  g_variant_builder_init (&builder, G_VARIANT_TYPE_TUPLE);
+  g_variant_builder_open (&builder, G_VARIANT_TYPE_ARRAY);
+
+  for (l = outputs; l != NULL; l = l->next)
+    {
+      CcDisplayMonitor *output = l->data;
+
+      if (!cc_display_monitor_is_active (output))
+        continue;
+
+      number = cc_display_monitor_get_ui_number (output);
+      if (number == 0)
+        continue;
+
+      g_variant_builder_add (&builder, "{sv}",
+                             cc_display_monitor_get_connector_name (output),
+                             g_variant_new_int32 (number));
+      n_monitors++;
+    }
+
+  g_variant_builder_close (&builder);
+
+  if (number < 2 || n_monitors < 2)
+    {
+      g_variant_builder_clear (&builder);
+      return monitor_labeler_hide (self);
+    }
+
+  g_dbus_proxy_call (self->shell_proxy,
+                     "ShowMonitorLabels",
+                     g_variant_builder_end (&builder),
+                     G_DBUS_CALL_FLAGS_NONE,
+                     -1, NULL, NULL, NULL);
+}
+
+static void
+ensure_monitor_labels (CcUbuntuPanel *self)
+{
+  g_autoptr(GList) windows = NULL;
+  GList *w;
+
+  windows = gtk_window_list_toplevels ();
+
+  for (w = windows; w; w = w->next)
+    {
+      if (gtk_window_has_toplevel_focus (GTK_WINDOW (w->data)))
+        {
+          monitor_labeler_show (self);
+          break;
+        }
+    }
+
+  if (!w)
+    monitor_labeler_hide (self);
+}
+
+static void
+shell_proxy_ready (GObject        *source,
+                   GAsyncResult   *res,
+                   CcUbuntuPanel *self)
+{
+  GDBusProxy *proxy;
+  g_autoptr(GError) error = NULL;
+
+  proxy = cc_object_storage_create_dbus_proxy_finish (res, &error);
+  if (!proxy)
+    {
+      if (!g_error_matches (error, G_IO_ERROR, G_IO_ERROR_CANCELLED))
+        g_warning ("Failed to contact gnome-shell: %s", error->message);
+      return;
+    }
+
+  self->shell_proxy = proxy;
+
+  ensure_monitor_labels (self);
+}
+
+static GList *
+get_valid_monitors (CcUbuntuPanel   *self,
+                    gint            *n_monitors,
+                    gint            *primary_index)
+{
+  CcDisplayMonitor *primary_monitor;
+  GList *config_monitors = NULL;
+  GList *valid_monitors, *l;
+  gint n_valid_monitors;
+
+  config_monitors = cc_display_config_get_monitors (self->display_current_config);
+  primary_monitor = NULL;
+  valid_monitors = NULL;
+  n_valid_monitors = 0;
+
+  for (l = config_monitors; l != NULL; l = l->next)
+    {
+      CcDisplayMonitor *monitor = l->data;
+
+      if (!cc_display_monitor_is_active (monitor))
+        continue;
+
+      /* The default monitors list uses reversed order, so prepend to
+       * set it back to mutter order */
+      valid_monitors = g_list_prepend (valid_monitors, monitor);
+
+      if (cc_display_monitor_is_primary (monitor))
+        primary_monitor = monitor;
+
+      n_valid_monitors++;
+    }
+
+  if (n_monitors)
+    *n_monitors = n_valid_monitors;
+
+  if (primary_index)
+    *primary_index = g_list_index (valid_monitors, primary_monitor);
+
+  return valid_monitors;
+}
+
+static int
+ui_sort_monitor (gconstpointer a, gconstpointer b)
+{
+  CcDisplayMonitor *monitor_a = (CcDisplayMonitor *) a;
+  CcDisplayMonitor *monitor_b = (CcDisplayMonitor *) b;
+
+  return cc_display_monitor_get_ui_number (monitor_a) -
+         cc_display_monitor_get_ui_number (monitor_b);
+}
+
+static GList *
+get_valid_monitors_sorted (CcUbuntuPanel   *self,
+                           gint            *n_monitors,
+                           gint            *primary_index)
+{
+  GList *monitors = get_valid_monitors (self, n_monitors, primary_index);
+
+  return g_list_sort (monitors, ui_sort_monitor);
+}
+
+static int
+dock_monitor_to_id (gint index,
+                    gint primary_monitor,
+                    gint n_monitors)
+{
+  if (index < 0)
+    return -1;
+
+  /* The The dock uses the Gdk index for monitors, where the primary monitor
+   * always has index 0, so let's follow what dash-to-dock does in docking.js
+   * (as part of _createDocks) */
+  return (primary_monitor + index) % n_monitors;
+}
+
+typedef enum
+{
+  GSD_UBUNTU_DOCK_MONITOR_ALL,
+  GSD_UBUNTU_DOCK_MONITOR_PRIMARY,
+} GsdUbuntuDockMonitor;
+
+static char *
+get_dock_monitor_value_object_name (HdyValueObject *object,
+                                    CcUbuntuPanel  *self)
+{
+  const GValue *value = hdy_value_object_get_value (object);
+
+  if (G_VALUE_TYPE (value) == G_TYPE_STRING)
+    return g_value_dup_string (value);
+
+  if (G_VALUE_TYPE (value) == CC_TYPE_DISPLAY_MONITOR)
+    {
+      CcDisplayMonitor *monitor = g_value_get_object (value);
+      int monitor_number = cc_display_monitor_get_ui_number (monitor);
+      const char *monitor_name = cc_display_monitor_get_display_name (monitor);
+
+      if (gtk_widget_get_state_flags (GTK_WIDGET (self)) & GTK_STATE_FLAG_DIR_LTR)
+        return g_strdup_printf ("%d. %s", monitor_number, monitor_name);
+      else
+        return g_strdup_printf ("%s .%d", monitor_name, monitor_number);
+    }
+
+  g_return_val_if_reached (NULL);
+}
+
+static void
+populate_dock_monitor_combo_row (CcUbuntuPanel *self)
+{
+  g_autoptr(CcDisplayMonitor) primary_monitor = NULL;
+  g_autoptr(GList) valid_monitors = NULL;
+  g_autoptr(HdyValueObject) primary_value_object = NULL;
+  g_autoptr(HdyValueObject) all_displays_value_object = NULL;
+  GList *l;
+  gint index;
+
+  if (self->display_config_manager == NULL)
+    return;
+
+  g_list_store_remove_all (self->dock_monitors_liststore);
+
+  valid_monitors = get_valid_monitors_sorted (self, NULL, NULL);
+  gtk_widget_set_visible (GTK_WIDGET (self->dock_monitor_row), valid_monitors != NULL);
+
+  if (!valid_monitors)
+    return;
+
+  all_displays_value_object = hdy_value_object_new_string (_("All displays"));
+  g_list_store_insert (self->dock_monitors_liststore,
+                       GSD_UBUNTU_DOCK_MONITOR_ALL,
+                       all_displays_value_object);
+
+  for (l = valid_monitors, index = 0; l != NULL; l = l->next, index++)
+    {
+      g_auto(GValue) value = G_VALUE_INIT;
+      g_autoptr(HdyValueObject) monitor_value_object = NULL;
+      CcDisplayMonitor *monitor = l->data;
+
+      if (cc_display_monitor_is_primary (monitor))
+        g_set_object (&primary_monitor, monitor);
+
+      g_value_init (&value, CC_TYPE_DISPLAY_MONITOR);
+      g_value_set_object (&value, monitor);
+      monitor_value_object = hdy_value_object_new (&value);
+
+      g_list_store_append (self->dock_monitors_liststore, monitor_value_object);
+    }
+
+  if (primary_monitor)
+    {
+      int ui_number = cc_display_monitor_get_ui_number (primary_monitor);
+
+      if (gtk_widget_get_state_flags (GTK_WIDGET (self)) & GTK_STATE_FLAG_DIR_LTR)
+        {
+          primary_value_object = hdy_value_object_new_take_string(
+            g_strdup_printf ("%s (%d)", _("Primary Display"), ui_number));
+        }
+      else
+        {
+          primary_value_object = hdy_value_object_new_take_string(
+            g_strdup_printf ("(%d) %s", ui_number, _("Primary Display")));
+        }
+    }
+  else
+    {
+      primary_value_object = hdy_value_object_new_string (_("Primary Display"));
+    }
+
+  g_list_store_insert (self->dock_monitors_liststore,
+                       GSD_UBUNTU_DOCK_MONITOR_PRIMARY,
+                       primary_value_object);
+}
+
+static void
+on_screen_changed (CcUbuntuPanel *self)
+{
+  g_autoptr(CcDisplayConfig) current = NULL;
+
+  if (self->display_config_manager == NULL)
+    return;
+
+  current = cc_display_config_manager_get_current (self->display_config_manager);
+  if (current == NULL)
+    return;
+
+  self->updating = TRUE;
+
+  g_set_object (&self->display_current_config, current);
+
+  populate_dock_monitor_combo_row (self);
+  ensure_monitor_labels (self);
+
+  self->updating = FALSE;
+
+  update_dock_monitor_combo_row_selection (self);
+}
+
+static void
+session_bus_ready (GObject        *source,
+                   GAsyncResult   *res,
+                   gpointer        user_data)
+{
+  CcUbuntuPanel *self = user_data;
+  GDBusConnection *bus;
+  g_autoptr(GError) error = NULL;
+
+  bus = g_bus_get_finish (res, &error);
+  if (!bus)
+    {
+      if (!g_error_matches (error, G_IO_ERROR, G_IO_ERROR_CANCELLED))
+        g_warning ("Failed to get session bus: %s", error->message);
+      return;
+    }
+
+  self->display_config_manager = cc_display_config_manager_dbus_new ();
+  g_signal_connect_object (self->display_config_manager, "changed",
+                           G_CALLBACK (on_screen_changed),
+                           self,
+                           G_CONNECT_SWAPPED);
+}
+
+static void
+on_theme_box_selected_children_changed (CcUbuntuPanel *self)
+{
+  const gchar *gtk_theme = NULL;
+  const gchar *gedit_theme = NULL;
+  g_autoptr(GList) selected = NULL;
+
+  selected = gtk_flow_box_get_selected_children (self->theme_box);
+  if (selected != NULL)
+    {
+      GtkFlowBoxChild *selected_item = GTK_FLOW_BOX_CHILD (g_list_nth_data (selected, 0));
+      if (selected_item == self->theme_light)
+      {
+        gtk_theme = "Yaru";
+        gedit_theme = "Yaru";
+      }
+      else if (selected_item == self->theme_dark)
+      {
+        gtk_theme = "Yaru-dark";
+        gedit_theme = "Yaru-dark";
+      }
+    }
+
+  if (gtk_theme != NULL)
+    g_settings_set_string (self->interface_settings, GTK_THEME_KEY, gtk_theme);
+  if (self->gedit_settings && gedit_theme != NULL)
+    g_settings_set_string (self->gedit_settings, GEDIT_THEME_KEY, gedit_theme);
+}
+
+static void
+on_interface_settings_changed (CcUbuntuPanel *self)
+{
+  g_autofree gchar *gtk_theme = NULL;
+  g_autofree gchar *cursor_theme = NULL;
+  g_autofree gchar *icon_theme = NULL;
+  GtkFlowBoxChild *theme_item = NULL;
+
+  gtk_theme = g_settings_get_string (self->interface_settings, GTK_THEME_KEY);
+  cursor_theme = g_settings_get_string (self->interface_settings, CURSOR_THEME_KEY);
+  icon_theme = g_settings_get_string (self->interface_settings, ICON_THEME_KEY);
+
+  if (g_str_equal (cursor_theme, "Yaru") && g_str_equal (icon_theme, "Yaru"))
+    {
+      if (g_strcmp0 (gtk_theme, "Yaru") == 0)
+        theme_item = self->theme_light;
+      else if (g_strcmp0 (gtk_theme, "Yaru-dark") == 0)
+        theme_item = self->theme_dark;
+    }
+
+  if (theme_item != NULL)
+    gtk_flow_box_select_child (self->theme_box, theme_item);
+  else
+    gtk_flow_box_unselect_all (self->theme_box);
+}
+
+static void
+icon_size_widget_refresh (CcUbuntuPanel *self)
+{
+  gint value = g_settings_get_int (self->dock_settings, ICONSIZE_KEY);
+  gtk_adjustment_set_value (self->icon_size_adjustment, (gdouble) value / 2);
+}
+
+static gchar *
+on_icon_size_format_value (CcUbuntuPanel *self, gdouble value)
+{
+  return g_strdup_printf ("%d", (int)value * 2);
+}
+
+static void
+on_icon_size_adjustment_value_changed (CcUbuntuPanel *self)
+{
+  gint value = (gint)gtk_adjustment_get_value (self->icon_size_adjustment) * 2;
+  if (g_settings_get_int (self->dock_settings, ICONSIZE_KEY) != value)
+    g_settings_set_int (self->dock_settings, ICONSIZE_KEY, value);
+}
+
+static void
+on_dock_monitor_row_changed (CcUbuntuPanel *self)
+{
+  gboolean ubuntu_dock_on_all_monitors;
+  g_autofree char *ubuntu_dock_current_connector = NULL;
+  int selected;
+
+  if (self->updating)
+    return;
+
+  selected = hdy_combo_row_get_selected_index (self->dock_monitor_row);
+  if (selected < 0)
+    return;
+
+  ubuntu_dock_on_all_monitors =
+    g_settings_get_boolean (self->dock_settings, UBUNTU_DOCK_ALL_MONITORS_KEY);
+  ubuntu_dock_current_connector =
+    g_settings_get_string (self->dock_settings, UBUNTU_DOCK_PREFERRED_CONNECTOR_KEY);
+  if (selected == GSD_UBUNTU_DOCK_MONITOR_ALL)
+    {
+      if (!ubuntu_dock_on_all_monitors)
+        {
+          g_settings_set_boolean (self->dock_settings,
+                                  UBUNTU_DOCK_ALL_MONITORS_KEY,
+                                  TRUE);
+          g_settings_apply (self->dock_settings);
+        }
+    }
+  else
+    {
+      g_autoptr(GSettings) delayed_settings = g_settings_new (UBUNTU_DOCK_SCHEMA);
+      g_settings_delay (delayed_settings);
+      g_autofree char *connector_name = NULL;
+
+      if (ubuntu_dock_on_all_monitors)
+        g_settings_set_boolean (delayed_settings, UBUNTU_DOCK_ALL_MONITORS_KEY, FALSE);
+
+      if (selected == GSD_UBUNTU_DOCK_MONITOR_PRIMARY)
+        {
+          connector_name = g_strdup ("primary");
+        }
+      else
+        {
+          g_autoptr(HdyValueObject) value_object = NULL;
+          CcDisplayMonitor *monitor;
+
+          value_object = g_list_model_get_item (G_LIST_MODEL (self->dock_monitors_liststore),
+                                                selected);
+
+          monitor = g_value_get_object (hdy_value_object_get_value (value_object));
+          connector_name = g_strdup (cc_display_monitor_get_connector_name (monitor));
+        }
+
+      if (g_strcmp0 (ubuntu_dock_current_connector, connector_name) != 0)
+        {
+          g_settings_set_int (delayed_settings, UBUNTU_DOCK_PREFERRED_MONITOR_KEY,
+                                                UBUNTU_DOCK_MONITOR_INDEX_USE_CONNECTOR);
+          g_settings_set_string (delayed_settings, UBUNTU_DOCK_PREFERRED_CONNECTOR_KEY,
+                                 connector_name);
+        }
+
+      g_settings_apply (delayed_settings);
+    }
+}
+
+static CcDisplayMonitor *
+get_dock_monitor (CcUbuntuPanel *self)
+{
+  g_autoptr(GList) monitors = NULL;
+  int index;
+  int n_monitors;
+  int primary_monitor;
+
+  monitors = get_valid_monitors_sorted (self, &n_monitors, &primary_monitor);
+  index = g_settings_get_int (self->dock_settings, UBUNTU_DOCK_PREFERRED_MONITOR_KEY);
+
+  if (index == UBUNTU_DOCK_MONITOR_INDEX_USE_CONNECTOR)
+    {
+      g_autofree char *connector = NULL;
+      GList *l;
+      int i;
+
+      connector = g_settings_get_string (self->dock_settings,
+                                         UBUNTU_DOCK_PREFERRED_CONNECTOR_KEY);
+
+      for (l = monitors, i = 0; l; l = l->next, i++)
+        {
+          CcDisplayMonitor *monitor = l->data;
+          const char *monitor_connector = cc_display_monitor_get_connector_name (monitor);
+          if (g_strcmp0 (monitor_connector, connector) == 0)
+            return g_object_ref (monitor);
+        }
+    }
+
+  if (index < 0 || index >= n_monitors)
+    return NULL;
+
+  index = dock_monitor_to_id (index, primary_monitor, n_monitors);
+
+  return g_object_ref (g_list_nth_data (monitors, index));
+}
+
+static gboolean
+dock_placement_row_compare (gconstpointer a, gconstpointer b)
+{
+  const GValue *row_value_a;
+  const GValue *row_value_b;
+
+  row_value_a = hdy_value_object_get_value (HDY_VALUE_OBJECT ((gpointer) a));
+  row_value_b = hdy_value_object_get_value (HDY_VALUE_OBJECT ((gpointer) b));
+
+  if (row_value_a == NULL || row_value_b == NULL)
+    return row_value_a == row_value_b;
+
+  if (G_VALUE_TYPE (row_value_a) != G_VALUE_TYPE (row_value_b))
+    return FALSE;
+
+  if (G_VALUE_TYPE (row_value_a) == CC_TYPE_DISPLAY_MONITOR)
+    {
+      return cc_display_monitor_get_ui_number (g_value_get_object (row_value_a)) ==
+             cc_display_monitor_get_ui_number (g_value_get_object (row_value_b));
+    }
+
+  if (G_VALUE_TYPE (row_value_a) == G_TYPE_STRING)
+    {
+      return g_strcmp0 (g_value_get_string (row_value_a),
+                        g_value_get_string (row_value_b)) == 0;
+    }
+
+  g_return_val_if_reached (FALSE);
+}
+
+static void
+update_dock_monitor_combo_row_selection (CcUbuntuPanel *self)
+{
+  guint selection = GSD_UBUNTU_DOCK_MONITOR_PRIMARY;
+
+  if (g_settings_get_boolean (self->dock_settings, UBUNTU_DOCK_ALL_MONITORS_KEY))
+    {
+      selection = GSD_UBUNTU_DOCK_MONITOR_ALL;
+    }
+  else
+    {
+      g_autoptr (CcDisplayMonitor) monitor = get_dock_monitor (self);
+
+      if (monitor)
+        {
+          g_autoptr(HdyValueObject) monitor_value_object = NULL;
+          g_auto(GValue) value = G_VALUE_INIT;
+
+          g_value_init (&value, CC_TYPE_DISPLAY_MONITOR);
+          g_value_set_object (&value, monitor);
+          monitor_value_object = hdy_value_object_new (&value);
+
+          if (!g_list_store_find_with_equal_func (self->dock_monitors_liststore,
+                                                  monitor_value_object,
+                                                  dock_placement_row_compare,
+                                                  &selection))
+            selection = GSD_UBUNTU_DOCK_MONITOR_PRIMARY;
+        }
+    }
+
+  hdy_combo_row_set_selected_index (self->dock_monitor_row, selection);
+}
+
+static void
+cc_ubuntu_panel_class_init (CcUbuntuPanelClass *klass)
+{
+  GObjectClass *object_class = G_OBJECT_CLASS (klass);
+  GtkWidgetClass *widget_class = GTK_WIDGET_CLASS (klass);
+
+  object_class->dispose = cc_ubuntu_panel_dispose;
+
+  gtk_widget_class_set_template_from_resource (widget_class, "/org/gnome/control-center/ubuntu/cc-ubuntu-panel.ui");
+
+  gtk_widget_class_bind_template_child (widget_class, CcUbuntuPanel, dock_preferences_group);
+  gtk_widget_class_bind_template_child (widget_class, CcUbuntuPanel, dock_autohide_switch);
+  gtk_widget_class_bind_template_child (widget_class, CcUbuntuPanel, dock_monitor_row);
+  gtk_widget_class_bind_template_child (widget_class, CcUbuntuPanel, dock_position_row);
+  gtk_widget_class_bind_template_child (widget_class, CcUbuntuPanel, icon_size_adjustment);
+  gtk_widget_class_bind_template_child (widget_class, CcUbuntuPanel, icon_size_scale);
+  gtk_widget_class_bind_template_child (widget_class, CcUbuntuPanel, theme_box);
+  gtk_widget_class_bind_template_child (widget_class, CcUbuntuPanel, theme_dark);
+  gtk_widget_class_bind_template_child (widget_class, CcUbuntuPanel, theme_light);
+
+  gtk_widget_class_bind_template_callback (widget_class, on_dock_monitor_row_changed);
+  gtk_widget_class_bind_template_callback (widget_class, on_icon_size_adjustment_value_changed);
+  gtk_widget_class_bind_template_callback (widget_class, on_icon_size_format_value);
+  gtk_widget_class_bind_template_callback (widget_class, on_theme_box_selected_children_changed);
+}
+
+static void
+mapped_cb (CcUbuntuPanel *self)
+{
+  CcShell *shell;
+  GtkWidget *toplevel;
+
+  shell = cc_panel_get_shell (CC_PANEL (self));
+  toplevel = cc_shell_get_toplevel (shell);
+
+  g_signal_handlers_disconnect_by_func (toplevel, mapped_cb, self);
+  g_signal_connect_object (toplevel, "notify::has-toplevel-focus",
+                           G_CALLBACK (ensure_monitor_labels), self,
+                           G_CONNECT_SWAPPED);
+}
+
+typedef enum
+{
+  GSD_UBUNTU_DOCK_POSITION_TOP,
+  GSD_UBUNTU_DOCK_POSITION_RIGHT,
+  GSD_UBUNTU_DOCK_POSITION_BOTTOM,
+  GSD_UBUNTU_DOCK_POSITION_LEFT,
+
+  GSD_UBUNTU_DOCK_POSITION_FIRST = GSD_UBUNTU_DOCK_POSITION_RIGHT,
+} GsdUbuntuDockPosition;
+
+static GsdUbuntuDockPosition
+get_dock_position_for_direction (CcUbuntuPanel         *self,
+                                 GsdUbuntuDockPosition  position)
+{
+  if (gtk_widget_get_state_flags (GTK_WIDGET (self)) & GTK_STATE_FLAG_DIR_RTL)
+    {
+      switch (position)
+        {
+          case GSD_UBUNTU_DOCK_POSITION_RIGHT:
+            position = GSD_UBUNTU_DOCK_POSITION_LEFT;
+            break;
+          case GSD_UBUNTU_DOCK_POSITION_LEFT:
+            position = GSD_UBUNTU_DOCK_POSITION_LEFT;
+            break;
+          default:
+            break;
+        }
+    }
+
+  return position;
+}
+
+static const char *
+get_dock_position_string (GsdUbuntuDockPosition  position)
+{
+  switch (position)
+    {
+      case GSD_UBUNTU_DOCK_POSITION_TOP:
+        return "TOP";
+      case GSD_UBUNTU_DOCK_POSITION_RIGHT:
+        return "RIGHT";
+      case GSD_UBUNTU_DOCK_POSITION_BOTTOM:
+        return "BOTTOM";
+      case GSD_UBUNTU_DOCK_POSITION_LEFT:
+        return "LEFT";
+      default:
+        g_return_val_if_reached ("LEFT");
+    }
+}
+
+static GsdUbuntuDockPosition
+get_dock_position_from_string (const char *position)
+{
+  if (g_str_equal (position, "TOP"))
+    return GSD_UBUNTU_DOCK_POSITION_TOP;
+
+  if (g_str_equal (position, "RIGHT"))
+    return GSD_UBUNTU_DOCK_POSITION_RIGHT;
+
+  if (g_str_equal (position, "BOTTOM"))
+    return GSD_UBUNTU_DOCK_POSITION_BOTTOM;
+
+  if (g_str_equal (position, "LEFT"))
+    return GSD_UBUNTU_DOCK_POSITION_LEFT;
+
+  g_return_val_if_reached (GSD_UBUNTU_DOCK_POSITION_LEFT);
+}
+
+static GsdUbuntuDockPosition
+get_dock_position_row_position (CcUbuntuPanel *self,
+                                int            index)
+{
+  GListModel *model = hdy_combo_row_get_model (self->dock_position_row);
+  HdyValueObject *value_object = g_list_model_get_item (model, index);
+
+  return GPOINTER_TO_INT (g_object_get_data (G_OBJECT (value_object), "position"));
+}
+
+static int
+get_dock_position_row_index (CcUbuntuPanel         *self,
+                             GsdUbuntuDockPosition  position)
+{
+  GListModel *model = hdy_combo_row_get_model (self->dock_position_row);
+  guint n_items;
+  guint i;
+
+  n_items = g_list_model_get_n_items (model);
+
+  for (i = 0; i < n_items; i++)
+    {
+      HdyValueObject *value_object = g_list_model_get_item (model, i);
+      GsdUbuntuDockPosition item_position;
+
+      item_position = GPOINTER_TO_INT (g_object_get_data (G_OBJECT (value_object), "position"));
+
+      if (item_position == position)
+        return i;
+    }
+
+  g_return_val_if_reached (0);
+}
+
+static gboolean
+dock_position_get_mapping (GValue   *value,
+                           GVariant *variant,
+                           gpointer  user_data)
+{
+  CcUbuntuPanel *self = user_data;
+  GsdUbuntuDockPosition position;
+
+  position = get_dock_position_from_string (g_variant_get_string (variant, NULL));
+  position = get_dock_position_for_direction (self, position);
+
+  if (G_VALUE_TYPE (value) == G_TYPE_INT)
+    {
+      g_value_set_int (value, get_dock_position_row_index (self, position));
+      return TRUE;
+    }
+  else if (G_VALUE_TYPE (value) == G_TYPE_STRING)
+    {
+      g_value_set_string (value, get_dock_position_string (position));
+      return TRUE;
+    }
+
+  return FALSE;
+}
+
+static GVariant *
+dock_position_set_mapping (const GValue       *value,
+                           const GVariantType *type,
+                           gpointer            user_data)
+{
+  CcUbuntuPanel *self = user_data;
+  GsdUbuntuDockPosition position;
+
+  position = get_dock_position_row_position (self, g_value_get_int (value));
+  position = get_dock_position_for_direction (self, position);
+
+  return g_variant_new_string (get_dock_position_string (position));
+}
+
+static void
+populate_dock_position_row (HdyComboRow *combo_row)
+{
+  g_autoptr (GListStore) list_store = NULL;
+  struct {
+    char *name;
+    GsdUbuntuDockPosition position;
+  } positions[] = {
+    {
+      NC_("Position on screen for the Ubuntu dock", "Left"),
+          GSD_UBUNTU_DOCK_POSITION_LEFT,
+    },
+    {
+      NC_("Position on screen for the Ubuntu dock", "Bottom"),
+          GSD_UBUNTU_DOCK_POSITION_BOTTOM,
+    },
+    {
+      NC_("Position on screen for the Ubuntu dock", "Right"),
+          GSD_UBUNTU_DOCK_POSITION_RIGHT,
+    },
+  };
+  guint i;
+
+  list_store = g_list_store_new (HDY_TYPE_VALUE_OBJECT);
+  for (i = 0; i < G_N_ELEMENTS (positions); i++)
+    {
+      g_autoptr (HdyValueObject) value_object = NULL;
+
+      value_object = hdy_value_object_new_string (_(positions[i].name));
+      g_object_set_data (G_OBJECT (value_object),
+                         "position",
+                         GUINT_TO_POINTER (positions[i].position));
+      g_list_store_append (list_store, value_object);
+    }
+
+  hdy_combo_row_bind_name_model (combo_row,
+                                 G_LIST_MODEL (list_store),
+                                 (HdyComboRowGetNameFunc) hdy_value_object_dup_string,
+                                 NULL, NULL);
+}
+
+static void
+cc_ubuntu_panel_init (CcUbuntuPanel *self)
+{
+  GSettingsSchemaSource *schema_source = g_settings_schema_source_get_default ();
+  g_autoptr(GSettingsSchema) schema = NULL;
+
+  g_resources_register (cc_ubuntu_get_resource ());
+
+  gtk_widget_init_template (GTK_WIDGET (self));
+
+  self->interface_settings = g_settings_new (INTERFACE_SCHEMA);
+  g_signal_connect_object (self->interface_settings, "changed::" GTK_THEME_KEY,
+                           G_CALLBACK (on_interface_settings_changed), self, G_CONNECT_SWAPPED);
+  g_signal_connect_object (self->interface_settings, "changed::" CURSOR_THEME_KEY,
+                           G_CALLBACK (on_interface_settings_changed), self, G_CONNECT_SWAPPED);
+  g_signal_connect_object (self->interface_settings, "changed::" ICON_THEME_KEY,
+                           G_CALLBACK (on_interface_settings_changed), self, G_CONNECT_SWAPPED);
+
+  schema = g_settings_schema_source_lookup (schema_source, GEDIT_PREFRENCES_SCHEMA, TRUE);
+  if (schema)
+    {
+      self->gedit_settings = g_settings_new (GEDIT_PREFRENCES_SCHEMA);
+      g_signal_connect_object (self->gedit_settings, "changed::" GEDIT_THEME_KEY,
+                               G_CALLBACK (on_interface_settings_changed), self, G_CONNECT_SWAPPED);
+    }
+  else
+    {
+      g_warning ("No gedit is installed here. Colors won't be updated. Please fix your installation.");
+    }
+
+  /* Only load if we have ubuntu dock or dash to dock installed */
+  schema = g_settings_schema_source_lookup (schema_source, UBUNTU_DOCK_SCHEMA, TRUE);
+  if (!schema)
+    {
+      g_warning ("No Ubuntu Dock is installed here. Panel disabled. Please fix your installation.");
+      gtk_widget_hide (GTK_WIDGET (self->dock_preferences_group));
+      return;
+    }
+
+  self->dock_settings = g_settings_new_full (schema, NULL, NULL);
+  self->dock_monitors_liststore = g_list_store_new (HDY_TYPE_VALUE_OBJECT);
+
+  self->updating = TRUE;
+  hdy_combo_row_bind_name_model (self->dock_monitor_row,
+                                 G_LIST_MODEL (self->dock_monitors_liststore),
+                                 (HdyComboRowGetNameFunc) get_dock_monitor_value_object_name,
+                                 self, NULL);
+  self->updating = FALSE;
+
+  populate_dock_position_row (self->dock_position_row);
+
+  g_signal_connect_object (self->dock_settings, "changed::" ICONSIZE_KEY,
+                           G_CALLBACK (icon_size_widget_refresh), self, G_CONNECT_SWAPPED);
+  g_signal_connect_object (self->dock_settings, "changed::" UBUNTU_DOCK_ALL_MONITORS_KEY,
+                           G_CALLBACK (update_dock_monitor_combo_row_selection), self, G_CONNECT_SWAPPED);
+  g_signal_connect_object (self->dock_settings, "changed::" UBUNTU_DOCK_PREFERRED_MONITOR_KEY,
+                           G_CALLBACK (update_dock_monitor_combo_row_selection), self, G_CONNECT_SWAPPED);
+  g_signal_connect_object (self->dock_settings, "changed::" UBUNTU_DOCK_PREFERRED_CONNECTOR_KEY,
+                           G_CALLBACK (update_dock_monitor_combo_row_selection), self, G_CONNECT_SWAPPED);
+  g_settings_bind_with_mapping (self->dock_settings, "dock-position",
+                                self->dock_position_row, "selected-index",
+                                G_SETTINGS_BIND_DEFAULT,
+                                dock_position_get_mapping,
+                                dock_position_set_mapping,
+                                self, NULL);
+  g_settings_bind (self->dock_settings, "dock-fixed",
+                   self->dock_autohide_switch, "active",
+                   G_SETTINGS_BIND_INVERT_BOOLEAN);
+
+  /* Icon size change - we halve the sizes so we can only get even values */
+  gtk_adjustment_set_value (self->icon_size_adjustment, DEFAULT_ICONSIZE / 2);
+  gtk_adjustment_set_lower (self->icon_size_adjustment, MIN_ICONSIZE / 2);
+  gtk_adjustment_set_upper (self->icon_size_adjustment, MAX_ICONSIZE / 2);
+  gtk_scale_add_mark (self->icon_size_scale, DEFAULT_ICONSIZE / 2, GTK_POS_BOTTOM, NULL);
+
+  icon_size_widget_refresh (self);
+  on_interface_settings_changed (self);
+
+  cc_object_storage_create_dbus_proxy (G_BUS_TYPE_SESSION,
+                                       G_DBUS_PROXY_FLAGS_DO_NOT_LOAD_PROPERTIES |
+                                       G_DBUS_PROXY_FLAGS_DO_NOT_CONNECT_SIGNALS |
+                                       G_DBUS_PROXY_FLAGS_DO_NOT_AUTO_START,
+                                       "org.gnome.Shell",
+                                       "/org/gnome/Shell",
+                                       "org.gnome.Shell",
+                                       cc_panel_get_cancellable (CC_PANEL (self)),
+                                       (GAsyncReadyCallback) shell_proxy_ready,
+                                       self);
+
+  g_signal_connect (self, "map", G_CALLBACK (mapped_cb), NULL);
+
+  g_bus_get (G_BUS_TYPE_SESSION, NULL, session_bus_ready, self);
+}
+
+void
+cc_ubuntu_panel_static_init_func (void)
+{
+  CcApplication *application;
+  const gchar *desktop_list;
+  g_auto(GStrv) desktops = NULL;
+
+  desktop_list = g_getenv ("XDG_CURRENT_DESKTOP");
+  if (desktop_list != NULL)
+    desktops = g_strsplit (desktop_list, ":", -1);
+
+  if (desktops == NULL || !g_strv_contains ((const gchar * const *) desktops, "ubuntu")) {
+    application = CC_APPLICATION (g_application_get_default ());
+    cc_shell_model_set_panel_visibility (cc_application_get_model (application),
+                                         "ubuntu",
+                                         CC_PANEL_HIDDEN);
+  }
+}
diff --git a/panels/ubuntu/cc-ubuntu-panel.h b/panels/ubuntu/cc-ubuntu-panel.h
new file mode 100644
index 0000000..b13f611
--- /dev/null
+++ b/panels/ubuntu/cc-ubuntu-panel.h
@@ -0,0 +1,35 @@
+/* -*- mode: C; c-file-style: "gnu"; indent-tabs-mode: nil; -*- */
+/*
+ * Copyright (C) 2017 Canonical Ltd
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 2 of the License, or (at your option) any later version.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General
+ * Public License along with this library; if not, see <http://www.gnu.org/licenses/>.
+ *
+ */
+
+#ifndef _CC_UBUNTU_PANEL_H_
+#define _CC_UBUNTU_PANEL_H_
+
+#include <gio/gio.h>
+#include <shell/cc-panel.h>
+
+G_BEGIN_DECLS
+
+#define CC_TYPE_UBUNTU_PANEL (cc_ubuntu_panel_get_type ())
+G_DECLARE_FINAL_TYPE (CcUbuntuPanel, cc_ubuntu_panel, CC, UBUNTU_PANEL, CcPanel)
+
+void cc_ubuntu_panel_static_init_func (void);
+
+G_END_DECLS
+
+#endif /* _CC_EDIT_DIALOG_H_ */
diff --git a/panels/ubuntu/cc-ubuntu-panel.ui b/panels/ubuntu/cc-ubuntu-panel.ui
new file mode 100644
index 0000000..3feb65e
--- /dev/null
+++ b/panels/ubuntu/cc-ubuntu-panel.ui
@@ -0,0 +1,228 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!-- Generated with glade 3.20.0 -->
+<interface>
+  <requires lib="gtk+" version="3.20"/>
+  <requires lib="libhandy" version="0.0"/>
+  <template class="CcUbuntuPanel" parent="CcPanel">
+    <property name="visible">True</property>
+    <child>
+      <object class="GtkScrolledWindow">
+        <property name="visible">True</property>
+        <property name="can_focus">True</property>
+        <property name="hscrollbar_policy">never</property>
+        <property name="shadow_type">in</property>
+        <child>
+          <object class="GtkViewport">
+            <property name="visible">True</property>
+            <property name="can_focus">False</property>
+            <child>
+              <object class="GtkBox">
+                <property name="visible">True</property>
+                <property name="can_focus">False</property>
+
+                <!-- Stub boxes to make the content cover 1/3 of the screen -->
+                <child>
+                  <object class="GtkBox">
+                    <property name="visible">True</property>
+                    <property name="can_focus">False</property>
+                    <property name="hexpand">True</property>
+                  </object>
+                </child>
+
+                <child>
+                  <object class="GtkBox">
+                    <property name="visible">True</property>
+                    <property name="can_focus">False</property>
+                    <property name="hexpand">True</property>
+                  </object>
+                  <packing>
+                    <property name="pack_type">end</property>
+                  </packing>
+                </child>
+
+                <!-- Content -->
+                <child>
+                  <object class="GtkBox">
+                    <property name="visible">True</property>
+                    <property name="can_focus">False</property>
+                    <property name="margin">32</property>
+                    <property name="spacing">12</property>
+                    <property name="orientation">vertical</property>
+                    <property name="hexpand">True</property>
+                    <child>
+                      <object class="GtkLabel">
+                        <property name="visible">True</property>
+                        <property name="can_focus">False</property>
+                        <property name="xalign">0</property>
+                        <property name="label" translatable="yes" comments="Theme settings.">Window colors</property>
+                        <attributes>
+                          <attribute name="weight" value="bold"/>
+                        </attributes>
+                      </object>
+                    </child>
+                    <child>
+                      <object class="GtkListBox">
+                        <property name="visible">True</property>
+                        <property name="can_focus">False</property>
+                        <property name="hexpand">True</property>
+                        <property name="selection_mode">none</property>
+                        <style>
+                          <class name="content"/>
+                        </style>
+                        <child>
+                          <object class="GtkFlowBox" id="theme_box">
+                            <property name="visible">True</property>
+                            <property name="homogeneous">True</property>
+                            <property name="max-children-per-line">2</property>
+                            <signal name="selected-children-changed" handler="on_theme_box_selected_children_changed" object="CcUbuntuPanel" swapped="yes"/>
+                            <style>
+                              <class name="content"/>
+                            </style>
+                            <child>
+                              <object class="GtkFlowBoxChild" id="theme_light">
+                                <property name="visible">True</property>
+                                <child>
+                                  <object class="GtkBox">
+                                    <property name="visible">True</property>
+                                    <property name="orientation">vertical</property>
+                                    <property name="spacing">6</property>
+                                    <property name="margin">10</property>
+                                    <child>
+                                      <object class="GtkImage">
+                                        <property name="visible">True</property>
+                                        <property name="resource">/org/gnome/control-center/ubuntu/theme-light.svg</property>
+                                      </object>
+                                    </child>
+                                    <child>
+                                      <object class="GtkLabel">
+                                        <property name="visible">True</property>
+                                        <property name="label" translatable="yes" context="Yaru theme in use">Light</property>
+                                      </object>
+                                    </child>
+                                  </object>
+                                </child>
+                              </object>
+                            </child>
+                            <child>
+                              <object class="GtkFlowBoxChild" id="theme_dark">
+                                <property name="visible">True</property>
+                                <child>
+                                  <object class="GtkBox">
+                                    <property name="visible">True</property>
+                                    <property name="orientation">vertical</property>
+                                    <property name="spacing">6</property>
+                                    <property name="margin">10</property>
+                                    <child>
+                                      <object class="GtkImage">
+                                        <property name="visible">True</property>
+                                        <property name="resource">/org/gnome/control-center/ubuntu/theme-dark.svg</property>
+                                      </object>
+                                    </child>
+                                    <child>
+                                      <object class="GtkLabel">
+                                        <property name="visible">True</property>
+                                        <property name="label" translatable="yes" context="Yaru theme in use">Dark</property>
+                                      </object>
+                                    </child>
+                                  </object>
+                                </child>
+                              </object>
+                            </child>
+                          </object>
+                        </child>
+                      </object>
+                    </child>
+                    <child>
+                      <object class="HdyPreferencesGroup" id="dock_preferences_group">
+                        <property name="margin_top">16</property>
+                        <property name="visible">True</property>
+                        <property name="title" translatable="yes" comments="Dock settings.">Dock</property>
+                        <child>
+                          <object class="HdyActionRow">
+                            <property name="visible">True</property>
+                            <property name="use_underline">True</property>
+                            <property name="can_focus">True</property>
+                            <property name="title" translatable="yes">Auto-hide the Dock</property>
+                            <property name="subtitle" translatable="yes">The dock hides when any windows overlap with it.</property>
+                            <property name="activatable">True</property>
+                            <property name="activatable_widget">dock_autohide_switch</property>
+                            <child>
+                              <object class="GtkSwitch" id="dock_autohide_switch">
+                                <property name="visible">True</property>
+                                <property name="can_focus">True</property>
+                                <property name="valign">center</property>
+                              </object>
+                              <packing>
+                                <property name="expand">False</property>
+                                <property name="fill">True</property>
+                                <property name="position">1</property>
+                              </packing>
+                            </child>
+                          </object>
+                        </child>
+                        <child>
+                          <object class="HdyActionRow">
+                            <property name="visible">True</property>
+                            <property name="use_underline">True</property>
+                            <property name="can_focus">True</property>
+                            <property name="title" translatable="yes">Icon size</property>
+                            <property name="activatable">True</property>
+                            <child>
+                              <object class="GtkScale" id="icon_size_scale">
+                                <property name="visible">True</property>
+                                <property name="adjustment">icon_size_adjustment</property>
+                                <property name="orientation">horizontal</property>
+                                <property name="value_pos">left</property>
+                                <property name="width_request">264</property>
+                                <signal name="format-value" handler="on_icon_size_format_value" object="CcUbuntuPanel" swapped="yes"/>
+                              </object>
+                              <packing>
+                                <property name="expand">False</property>
+                                <property name="fill">True</property>
+                                <property name="position">1</property>
+                              </packing>
+                            </child>
+                          </object>
+                        </child>
+                        <child>
+                          <object class="HdyComboRow" id="dock_monitor_row">
+                            <property name="visible">True</property>
+                            <property name="use_underline">True</property>
+                            <property name="can_focus">True</property>
+                            <property name="width_request">100</property>
+                            <property name="title" translatable="yes">Show on</property>
+                            <signal name="notify::selected-index" handler="on_dock_monitor_row_changed" swapped="yes"/>
+                          </object>
+                        </child>
+                        <child>
+                          <object class="HdyComboRow" id="dock_position_row">
+                            <property name="visible">True</property>
+                            <property name="use_underline">True</property>
+                            <property name="can_focus">True</property>
+                            <property name="can_focus">True</property>
+                            <property name="width_request">100</property>
+                            <property name="title" translatable="yes">Position on screen</property>
+                          </object>
+                        </child>
+                      </object>
+                    </child>
+                  </object>
+                  <packing>
+                    <property name="expand">False</property>
+                    <property name="fill">True</property>
+                    <property name="position">2</property>
+                  </packing>
+                </child>
+              </object>
+            </child>
+          </object>
+        </child>
+      </object>
+    </child>
+  </template>
+  <object class="GtkAdjustment" id="icon_size_adjustment">
+    <property name="step_increment">1</property>
+    <property name="page_increment">4</property>
+    <signal name="value-changed" handler="on_icon_size_adjustment_value_changed" object="CcUbuntuPanel" swapped="yes"/>
+  </object>
+</interface>
diff --git a/panels/ubuntu/gnome-ubuntu-panel.desktop.in.in b/panels/ubuntu/gnome-ubuntu-panel.desktop.in.in
new file mode 100644
index 0000000..78571f1
--- /dev/null
+++ b/panels/ubuntu/gnome-ubuntu-panel.desktop.in.in
@@ -0,0 +1,16 @@
+[Desktop Entry]
+Name=Appearance
+Comment=Appearance Settings
+Exec=gnome-control-center ubuntu
+Icon=preferences-ubuntu-panel
+Terminal=false
+Type=Application
+NoDisplay=true
+StartupNotify=true
+Categories=GNOME;GTK;Settings;DesktopSettings;X-GNOME-Settings-Panel;X-GNOME-PersonalSettings;X-GNOME-PersonalizationSettings;
+OnlyShowIn=ubuntu;
+X-GNOME-Bugzilla-Bugzilla=GNOME
+X-GNOME-Bugzilla-Product=gnome-control-center
+X-GNOME-Bugzilla-Version=@VERSION@
+# Translators: those are keywords for the ubuntu control-center panel
+Keywords=Dock;Launcher;Theme;
diff --git a/panels/ubuntu/meson.build b/panels/ubuntu/meson.build
new file mode 100644
index 0000000..5f55706
--- /dev/null
+++ b/panels/ubuntu/meson.build
@@ -0,0 +1,41 @@
+panels_list += cappletname
+desktop = 'gnome-@0@-panel.desktop'.format(cappletname)
+
+desktop_in = configure_file(
+  input: desktop + '.in.in',
+  output: desktop + '.in',
+  configuration: desktop_conf
+)
+
+i18n.merge_file(
+  type: 'desktop',
+  input: desktop_in,
+  output: desktop,
+  po_dir: po_dir,
+  install: true,
+  install_dir: control_center_desktopdir
+)
+
+sources = files('cc-ubuntu-panel.c')
+
+resource_data = files('cc-ubuntu-panel.ui',
+                      'theme-dark.svg',
+                      'theme-light.svg')
+
+sources += gnome.compile_resources(
+  'cc-' + cappletname + '-resources',
+  cappletname + '.gresource.xml',
+  c_name: 'cc_' + cappletname,
+  dependencies: resource_data,
+  export: true
+)
+
+cflags += '-DGNOMELOCALEDIR="@0@"'.format(control_center_localedir)
+
+panels_libs += static_library(
+  cappletname,
+  sources: sources,
+  include_directories: [top_inc, common_inc],
+  dependencies: common_deps,
+  c_args: cflags
+)
diff --git a/panels/ubuntu/theme-dark.svg b/panels/ubuntu/theme-dark.svg
new file mode 100644
index 0000000..65b478c
--- /dev/null
+++ b/panels/ubuntu/theme-dark.svg
@@ -0,0 +1,381 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<svg
+   viewBox="0 0 270 200"
+   version="1.1"
+   id="svg75"
+   sodipodi:docname="theme-dark.svg"
+   width="270"
+   height="200"
+   inkscape:version="1.1 (c68e22c387, 2021-05-23)"
+   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
+   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
+   xmlns:xlink="http://www.w3.org/1999/xlink"
+   xmlns="http://www.w3.org/2000/svg"
+   xmlns:svg="http://www.w3.org/2000/svg">
+  <sodipodi:namedview
+     id="namedview77"
+     pagecolor="#ffffff"
+     bordercolor="#666666"
+     borderopacity="1.0"
+     inkscape:pageshadow="2"
+     inkscape:pageopacity="0.0"
+     inkscape:pagecheckerboard="0"
+     showgrid="false"
+     width="270px"
+     inkscape:zoom="1.229349"
+     inkscape:cx="160.65413"
+     inkscape:cy="107.78062"
+     inkscape:window-width="1366"
+     inkscape:window-height="704"
+     inkscape:window-x="0"
+     inkscape:window-y="27"
+     inkscape:window-maximized="1"
+     inkscape:current-layer="svg75" />
+  <defs
+     id="defs30">
+    <style
+       id="style2">.cls-1{fill:url(#linear-gradient);}.cls-2{fill:#222;}.cls-20,.cls-3{fill:#272727;}.cls-4{fill:#343434;}.cls-5{fill:#e95420;}.cls-6{fill:#2c2c2c;}.cls-7{fill:#373737;}.cls-8{fill:#151515;}.cls-21,.cls-9{fill:#3d3d3d;}.cls-10{fill:url(#linear-gradient-2);}.cls-11{fill:url(#linear-gradient-3);}.cls-12{fill:url(#linear-gradient-4);}.cls-13{fill:#737373;}.cls-14{fill:url(#linear-gradient-5);}.cls-15{fill:url(#linear-gradient-6);}.cls-16{fill:url(#linear-gradient-7);}.cls-17{fill:url(#linear-gradient-8);}.cls-18{fill:url(#linear-gradient-9);}.cls-19{fill:url(#linear-gradient-10);}.cls-20{stroke:#4b4b4b;stroke-width:2px;}.cls-20,.cls-21{stroke-miterlimit:10;}.cls-21{stroke:#e95420;stroke-width:0.8px;}</style>
+    <linearGradient
+       id="linear-gradient"
+       x1="497.14001"
+       y1="613.5"
+       x2="497.14001"
+       y2="713.96002"
+       gradientTransform="matrix(6.09,0,0,-6.09,-2632.72,4349.65)"
+       gradientUnits="userSpaceOnUse">
+      <stop
+         offset="0"
+         stop-color="#350753"
+         id="stop4" />
+      <stop
+         offset="1"
+         stop-color="#720b53"
+         id="stop6" />
+    </linearGradient>
+    <linearGradient
+       id="linear-gradient-2"
+       x1="216.64"
+       y1="166.28999"
+       x2="289.81"
+       y2="166.28999"
+       gradientUnits="userSpaceOnUse">
+      <stop
+         offset="0"
+         stop-color="#772953"
+         id="stop9" />
+      <stop
+         offset="1"
+         stop-color="#510045"
+         id="stop11" />
+    </linearGradient>
+    <linearGradient
+       id="linear-gradient-3"
+       x1="226.89999"
+       y1="147.75"
+       x2="298.70001"
+       y2="189.2"
+       gradientUnits="userSpaceOnUse">
+      <stop
+         offset="0.25"
+         stop-color="#982963"
+         id="stop14" />
+      <stop
+         offset="0.91"
+         stop-color="#e98120"
+         id="stop16" />
+    </linearGradient>
+    <linearGradient
+       id="linear-gradient-4"
+       x1="392.56"
+       y1="164.23"
+       x2="319.39999"
+       y2="164.23"
+       gradientUnits="userSpaceOnUse">
+      <stop
+         offset="0.03"
+         stop-color="#e95420"
+         id="stop19" />
+      <stop
+         offset="0.51"
+         stop-color="#772953"
+         id="stop21" />
+    </linearGradient>
+    <linearGradient
+       id="linear-gradient-5"
+       x1="495.31"
+       y1="164.23"
+       x2="422.14999"
+       y2="164.23"
+       xlink:href="#linear-gradient-4" />
+    <linearGradient
+       id="linear-gradient-6"
+       x1="598.06"
+       y1="164.23"
+       x2="524.90002"
+       y2="164.23"
+       xlink:href="#linear-gradient-4" />
+    <linearGradient
+       id="linear-gradient-7"
+       x1="289.81"
+       y1="267.57001"
+       x2="216.64"
+       y2="267.57001"
+       xlink:href="#linear-gradient-4" />
+    <linearGradient
+       id="linear-gradient-8"
+       x1="392.56"
+       y1="267.57001"
+       x2="319.39999"
+       y2="267.57001"
+       xlink:href="#linear-gradient-4" />
+    <linearGradient
+       id="linear-gradient-9"
+       x1="495.31"
+       y1="267.57001"
+       x2="422.14999"
+       y2="267.57001"
+       xlink:href="#linear-gradient-4" />
+    <linearGradient
+       id="linear-gradient-10"
+       x1="598.06"
+       y1="267.57001"
+       x2="524.90002"
+       y2="267.57001"
+       xlink:href="#linear-gradient-4" />
+    <linearGradient
+       inkscape:collect="always"
+       xlink:href="#linear-gradient-4"
+       id="linearGradient79"
+       gradientUnits="userSpaceOnUse"
+       x1="392.56"
+       y1="164.23"
+       x2="319.39999"
+       y2="164.23" />
+  </defs>
+  <g
+     id="Bgrd"
+     transform="scale(0.34090909,0.32679739)">
+    <g
+       id="Wallpaper">
+      <rect
+         id="rect3045"
+         class="cls-1"
+         width="792"
+         height="612"
+         style="fill:url(#linear-gradient)"
+         x="0"
+         y="0" />
+    </g>
+  </g>
+  <g
+     id="Artwork"
+     transform="matrix(0.31297816,0,0,0.31297816,11.043435,4.1316606)">
+    <path
+       id="rect3061"
+       class="cls-2"
+       d="m 24.48,18.75 h 743.15 a 10,10 0 0 1 10,10 V 96.5 H 14.48 V 28.75 a 10,10 0 0 1 10,-10 z" />
+    <rect
+       id="rect3063"
+       class="cls-3"
+       x="14.48"
+       y="96.5"
+       width="161.73"
+       height="497.37" />
+    <rect
+       id="rect3065"
+       class="cls-4"
+       x="14.48"
+       y="216.35001"
+       width="161.73"
+       height="51.209999" />
+    <rect
+       id="rect3065-2"
+       data-name="rect3065"
+       class="cls-5"
+       x="14.48"
+       y="216.35001"
+       width="6.5900002"
+       height="51.209999" />
+    <rect
+       id="rect3069"
+       class="cls-6"
+       x="185.75999"
+       y="96.5"
+       width="590.78998"
+       height="497.37" />
+    <path
+       id="rect3071"
+       class="cls-6"
+       d="m 225.35,38 h 196.81 a 1.69,1.69 0 0 1 1.78,1.59 v 33.26 a 1.69,1.69 0 0 1 -1.78,1.59 H 225.35 a 1.68,1.68 0 0 1 -1.77,-1.59 V 39.61 A 1.68,1.68 0 0 1 225.35,38 Z" />
+    <path
+       id="rect3071-2"
+       data-name="rect3071"
+       class="cls-7"
+       d="m 430.81,38 h 37.84 a 1.68,1.68 0 0 1 1.77,1.59 v 33.26 a 1.68,1.68 0 0 1 -1.77,1.59 H 430.81 A 1.68,1.68 0 0 1 429,72.85 V 39.61 A 1.68,1.68 0 0 1 430.81,38 Z" />
+    <path
+       id="rect3071-3"
+       data-name="rect3071"
+       class="cls-7"
+       d="m 525.05,38 h 39.35 a 1.73,1.73 0 0 1 1.84,1.59 v 33.26 a 1.73,1.73 0 0 1 -1.84,1.59 h -39.35 a 1.73,1.73 0 0 1 -1.84,-1.59 V 39.61 A 1.73,1.73 0 0 1 525.05,38 Z" />
+    <path
+       id="rect3071-4"
+       data-name="rect3071"
+       class="cls-7"
+       d="m 571.54,38 h 39.35 a 1.73,1.73 0 0 1 1.85,1.59 v 33.26 a 1.73,1.73 0 0 1 -1.85,1.59 H 571.54 A 1.73,1.73 0 0 1 569.7,72.85 V 39.61 A 1.73,1.73 0 0 1 571.54,38 Z" />
+    <path
+       id="rect3071-5"
+       data-name="rect3071"
+       class="cls-8"
+       d="m 637.24,38 h 39.35 a 1.73,1.73 0 0 1 1.84,1.59 v 33.26 a 1.73,1.73 0 0 1 -1.84,1.59 H 637.24 A 1.73,1.73 0 0 1 635.4,72.85 V 39.61 A 1.73,1.73 0 0 1 637.24,38 Z" />
+    <path
+       id="rect3288"
+       class="cls-7"
+       d="m 36,38 h 37.69 a 1.83,1.83 0 0 1 2,1.59 v 33.26 a 1.83,1.83 0 0 1 -2,1.59 H 36 A 1.83,1.83 0 0 1 34,72.85 V 39.61 A 1.83,1.83 0 0 1 36,38 Z" />
+    <path
+       id="rect3288-2"
+       data-name="rect3288"
+       class="cls-7"
+       d="m 83.44,38 h 37.67 a 1.83,1.83 0 0 1 2,1.59 v 33.26 a 1.83,1.83 0 0 1 -2,1.59 H 83.44 a 1.83,1.83 0 0 1 -2,-1.59 V 39.61 a 1.83,1.83 0 0 1 2,-1.61 z" />
+    <path
+       id="rect3290"
+       class="cls-9"
+       d="m 138.71,38 h 79.72 a 1.68,1.68 0 0 1 1.77,1.59 v 33.26 a 1.68,1.68 0 0 1 -1.77,1.59 h -79.72 a 1.69,1.69 0 0 1 -1.78,-1.59 V 39.61 A 1.69,1.69 0 0 1 138.71,38 Z" />
+    <rect
+       id="rect39"
+       class="cls-2"
+       x="14.48"
+       y="583.71997"
+       width="762.60999"
+       height="10.14" />
+    <rect
+       id="rect39-2"
+       data-name="rect39"
+       class="cls-2"
+       x="176.21001"
+       y="96.5"
+       width="9.5600004"
+       height="492.16" />
+    <rect
+       id="rect39-3"
+       data-name="rect39"
+       class="cls-2"
+       x="767.94"
+       y="96.5"
+       width="9.5600004"
+       height="497.37" />
+    <circle
+       class="cls-5"
+       cx="743.63"
+       cy="54.419998"
+       r="12.5"
+       id="circle51" />
+    <path
+       id="rect3071-6"
+       data-name="rect3071"
+       class="cls-10"
+       d="m 219.78,134.73 h 66.9 a 3,3 0 0 1 3.13,2.75 v 57.62 a 3,3 0 0 1 -3.13,2.76 h -66.9 a 3,3 0 0 1 -3.14,-2.76 v -57.62 a 3,3 0 0 1 3.14,-2.75 z"
+       style="fill:url(#linear-gradient-2)" />
+    <path
+       id="rect3071-7"
+       data-name="rect3071"
+       class="cls-11"
+       d="m 230.88,134.73 h 56.29 a 2.69,2.69 0 0 1 2.64,2.75 v 57.62 a 2.7,2.7 0 0 1 -2.64,2.76 h -56.29 a 2.7,2.7 0 0 1 -2.64,-2.76 v -57.62 a 2.69,2.69 0 0 1 2.64,-2.75 z"
+       style="fill:url(#linear-gradient-3)" />
+    <path
+       id="rect3071-8"
+       data-name="rect3071"
+       class="cls-12"
+       d="m 322.53,130.6 h 22.92 l 7.15,4.13 h 36.83 a 3,3 0 0 1 3.13,2.75 v 57.62 a 3,3 0 0 1 -3.13,2.76 h -66.9 a 3,3 0 0 1 -3.13,-2.76 v -61.75 a 3,3 0 0 1 3.13,-2.75 z"
+       style="fill:url(#linearGradient79)" />
+    <path
+       id="rect3071-9"
+       data-name="rect3071"
+       class="cls-13"
+       d="m 322.53,146.06 h 30.07 l 8.69,-6.08 h 28.14 c 1.73,0 3.13,1 3.13,2.26 v 53.36 c 0,1.25 -1.4,2.26 -3.13,2.26 h -66.9 c -1.73,0 -3.13,-1 -3.13,-2.26 v -47.29 c 0,-1.24 1.4,-2.25 3.13,-2.25 z" />
+    <path
+       id="rect3071-10"
+       data-name="rect3071"
+       class="cls-14"
+       d="m 425.28,130.6 h 22.92 l 7.15,4.13 h 36.83 a 3,3 0 0 1 3.13,2.75 v 57.62 a 3,3 0 0 1 -3.13,2.76 h -66.9 a 3,3 0 0 1 -3.13,-2.76 v -61.75 a 3,3 0 0 1 3.13,-2.75 z"
+       style="fill:url(#linear-gradient-5)" />
+    <path
+       id="rect3071-11"
+       data-name="rect3071"
+       class="cls-13"
+       d="m 425.28,146.06 h 30.07 L 464,140 h 28.14 c 1.73,0 3.13,1 3.13,2.26 v 53.34 c 0,1.25 -1.4,2.26 -3.13,2.26 h -66.9 c -1.73,0 -3.13,-1 -3.13,-2.26 v -47.29 c 0.04,-1.24 1.44,-2.25 3.17,-2.25 z" />
+    <path
+       id="rect3071-12"
+       data-name="rect3071"
+       class="cls-15"
+       d="m 528,130.6 h 23 l 7.15,4.13 h 36.83 a 3,3 0 0 1 3.13,2.75 v 57.62 a 3,3 0 0 1 -3.13,2.76 H 528 a 3,3 0 0 1 -3.13,-2.76 V 133.35 A 3,3 0 0 1 528,130.6 Z"
+       style="fill:url(#linear-gradient-6)" />
+    <path
+       id="rect3071-13"
+       data-name="rect3071"
+       class="cls-13"
+       d="m 528,146.06 h 30.1 l 8.69,-6.08 h 28.14 c 1.73,0 3.13,1 3.13,2.26 v 53.36 c 0,1.25 -1.4,2.26 -3.13,2.26 H 528 c -1.73,0 -3.13,-1 -3.13,-2.26 v -47.29 c 0.03,-1.24 1.43,-2.25 3.13,-2.25 z" />
+    <path
+       id="rect3071-14"
+       data-name="rect3071"
+       class="cls-16"
+       d="m 219.78,233.94 h 22.92 l 7.15,4.13 h 36.83 a 3,3 0 0 1 3.13,2.76 v 57.62 a 3,3 0 0 1 -3.13,2.75 h -66.9 a 3,3 0 0 1 -3.14,-2.75 v -61.76 a 3,3 0 0 1 3.14,-2.75 z"
+       style="fill:url(#linear-gradient-7)" />
+    <path
+       id="rect3071-15"
+       data-name="rect3071"
+       class="cls-13"
+       d="m 219.78,249.4 h 30.07 l 8.69,-6.08 h 28.14 c 1.73,0 3.13,1 3.13,2.26 v 53.36 c 0,1.25 -1.4,2.26 -3.13,2.26 h -66.9 c -1.73,0 -3.14,-1 -3.14,-2.26 v -47.28 c 0,-1.25 1.41,-2.26 3.14,-2.26 z" />
+    <path
+       id="rect3071-16"
+       data-name="rect3071"
+       class="cls-17"
+       d="m 322.53,233.94 h 22.92 l 7.15,4.13 h 36.83 a 3,3 0 0 1 3.13,2.76 v 57.62 a 3,3 0 0 1 -3.13,2.75 h -66.9 a 3,3 0 0 1 -3.13,-2.75 v -61.76 a 3,3 0 0 1 3.13,-2.75 z"
+       style="fill:url(#linear-gradient-8)" />
+    <path
+       id="rect3071-17"
+       data-name="rect3071"
+       class="cls-13"
+       d="m 322.53,249.4 h 30.07 l 8.69,-6.08 h 28.14 c 1.73,0 3.13,1 3.13,2.26 v 53.36 c 0,1.25 -1.4,2.26 -3.13,2.26 h -66.9 c -1.73,0 -3.13,-1 -3.13,-2.26 v -47.28 c 0,-1.25 1.4,-2.26 3.13,-2.26 z" />
+    <path
+       id="rect3071-18"
+       data-name="rect3071"
+       class="cls-18"
+       d="m 425.28,233.94 h 22.92 l 7.15,4.13 h 36.83 a 3,3 0 0 1 3.13,2.76 v 57.62 a 3,3 0 0 1 -3.13,2.75 h -66.9 a 3,3 0 0 1 -3.13,-2.75 v -61.76 a 3,3 0 0 1 3.13,-2.75 z"
+       style="fill:url(#linear-gradient-9)" />
+    <path
+       id="rect3071-19"
+       data-name="rect3071"
+       class="cls-13"
+       d="m 425.28,249.4 h 30.07 l 8.69,-6.08 h 28.14 c 1.73,0 3.13,1 3.13,2.26 v 53.36 c 0,1.25 -1.4,2.26 -3.13,2.26 h -66.9 c -1.73,0 -3.13,-1 -3.13,-2.26 v -47.28 c 0,-1.25 1.4,-2.26 3.13,-2.26 z" />
+    <path
+       id="rect3071-20"
+       data-name="rect3071"
+       class="cls-19"
+       d="m 528,233.94 h 23 l 7.15,4.13 h 36.83 a 3,3 0 0 1 3.13,2.76 v 57.62 a 3,3 0 0 1 -3.13,2.75 H 528 a 3,3 0 0 1 -3.13,-2.75 v -61.76 a 3,3 0 0 1 3.13,-2.75 z"
+       style="fill:url(#linear-gradient-10)" />
+    <path
+       id="rect3071-21"
+       data-name="rect3071"
+       class="cls-13"
+       d="m 528,249.4 h 30.1 l 8.69,-6.08 h 28.14 c 1.73,0 3.13,1 3.13,2.26 v 53.36 c 0,1.25 -1.4,2.26 -3.13,2.26 H 528 c -1.73,0 -3.13,-1 -3.13,-2.26 v -47.28 c 0.03,-1.25 1.43,-2.26 3.13,-2.26 z" />
+    <path
+       class="cls-20"
+       d="m 748.35,115.48 h -74 L 656.91,98 639.49,115.49 h -74 a 4,4 0 0 0 -4,4 V 413.7 a 4,4 0 0 0 4,4 h 182.86 a 4,4 0 0 0 4,-4 V 119.49 a 4,4 0 0 0 -4,-4.01 z"
+       id="path69" />
+    <path
+       id="rect3071-22"
+       data-name="rect3071"
+       class="cls-21"
+       d="m 576.11,136.29 h 48.27 c 1.24,0 2.26,0.72 2.26,1.6 v 33.57 c 0,0.88 -1,1.6 -2.26,1.6 h -48.27 c -1.24,0 -2.26,-0.72 -2.26,-1.6 v -33.57 c 0,-0.89 1.02,-1.6 2.26,-1.6 z" />
+    <path
+       id="rect3071-23"
+       data-name="rect3071"
+       class="cls-9"
+       d="m 633.14,136.29 h 48.26 c 1.25,0 2.26,0.72 2.26,1.6 v 33.57 c 0,0.88 -1,1.6 -2.26,1.6 h -48.26 c -1.25,0 -2.26,-0.72 -2.26,-1.6 v -33.57 c 0,-0.89 1.01,-1.6 2.26,-1.6 z" />
+    <path
+       id="rect3071-24"
+       data-name="rect3071"
+       class="cls-9"
+       d="m 690.17,136.29 h 48.26 c 1.25,0 2.26,0.72 2.26,1.6 v 33.57 c 0,0.88 -1,1.6 -2.26,1.6 h -48.26 c -1.25,0 -2.26,-0.72 -2.26,-1.6 v -33.57 c 0,-0.89 1.01,-1.6 2.26,-1.6 z" />
+  </g>
+</svg>
diff --git a/panels/ubuntu/theme-light.svg b/panels/ubuntu/theme-light.svg
new file mode 100644
index 0000000..70f1125
--- /dev/null
+++ b/panels/ubuntu/theme-light.svg
@@ -0,0 +1,380 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<svg
+   viewBox="0 0 270 200"
+   version="1.1"
+   id="svg75"
+   sodipodi:docname="theme-light.svg"
+   width="270"
+   height="200"
+   inkscape:version="1.1 (c68e22c387, 2021-05-23)"
+   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
+   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
+   xmlns:xlink="http://www.w3.org/1999/xlink"
+   xmlns="http://www.w3.org/2000/svg"
+   xmlns:svg="http://www.w3.org/2000/svg">
+  <sodipodi:namedview
+     id="namedview77"
+     pagecolor="#ffffff"
+     bordercolor="#666666"
+     borderopacity="1.0"
+     inkscape:pageshadow="2"
+     inkscape:pageopacity="0.0"
+     inkscape:pagecheckerboard="0"
+     showgrid="false"
+     inkscape:zoom="1.7385621"
+     inkscape:cx="60.394737"
+     inkscape:cy="94.618421"
+     inkscape:window-width="1366"
+     inkscape:window-height="704"
+     inkscape:window-x="0"
+     inkscape:window-y="27"
+     inkscape:window-maximized="1"
+     inkscape:current-layer="svg75" />
+  <defs
+     id="defs30">
+    <style
+       id="style2">.cls-1{fill:url(#linear-gradient);}.cls-2{fill:#dcdcdc;}.cls-3{fill:#fafafa;}.cls-4{fill:#ddd;}.cls-5{fill:#e95420;}.cls-21,.cls-6{fill:#fff;}.cls-7{fill:#f5f5f5;}.cls-8{fill:#cacaca;}.cls-9{fill:#fcfcfc;}.cls-10{fill:url(#linear-gradient-2);}.cls-11{fill:url(#linear-gradient-3);}.cls-12{fill:url(#linear-gradient-4);}.cls-13{fill:#737373;}.cls-14{fill:url(#linear-gradient-5);}.cls-15{fill:url(#linear-gradient-6);}.cls-16{fill:url(#linear-gradient-7);}.cls-17{fill:url(#linear-gradient-8);}.cls-18{fill:url(#linear-gradient-9);}.cls-19{fill:url(#linear-gradient-10);}.cls-20{fill:#ebebeb;stroke:#cacaca;}.cls-20,.cls-21{stroke-miterlimit:10;}.cls-21{stroke:#e95420;}</style>
+    <linearGradient
+       id="linear-gradient"
+       x1="-941.78003"
+       y1="613.5"
+       x2="-941.78003"
+       y2="713.96002"
+       gradientTransform="matrix(6.09,0,0,-6.09,6133.58,4349.65)"
+       gradientUnits="userSpaceOnUse">
+      <stop
+         offset="0"
+         stop-color="#350753"
+         id="stop4" />
+      <stop
+         offset="1"
+         stop-color="#720b53"
+         id="stop6" />
+    </linearGradient>
+    <linearGradient
+       id="linear-gradient-2"
+       x1="216.64"
+       y1="166.28999"
+       x2="289.81"
+       y2="166.28999"
+       gradientUnits="userSpaceOnUse">
+      <stop
+         offset="0"
+         stop-color="#772953"
+         id="stop9" />
+      <stop
+         offset="1"
+         stop-color="#510045"
+         id="stop11" />
+    </linearGradient>
+    <linearGradient
+       id="linear-gradient-3"
+       x1="226.89999"
+       y1="147.75"
+       x2="298.70001"
+       y2="189.2"
+       gradientUnits="userSpaceOnUse">
+      <stop
+         offset="0.25"
+         stop-color="#982963"
+         id="stop14" />
+      <stop
+         offset="0.91"
+         stop-color="#e98120"
+         id="stop16" />
+    </linearGradient>
+    <linearGradient
+       id="linear-gradient-4"
+       x1="392.56"
+       y1="164.23"
+       x2="319.39999"
+       y2="164.23"
+       gradientUnits="userSpaceOnUse">
+      <stop
+         offset="0.03"
+         stop-color="#e95420"
+         id="stop19" />
+      <stop
+         offset="0.51"
+         stop-color="#772953"
+         id="stop21" />
+    </linearGradient>
+    <linearGradient
+       id="linear-gradient-5"
+       x1="495.31"
+       y1="164.23"
+       x2="422.14999"
+       y2="164.23"
+       xlink:href="#linear-gradient-4" />
+    <linearGradient
+       id="linear-gradient-6"
+       x1="598.06"
+       y1="164.23"
+       x2="524.90002"
+       y2="164.23"
+       xlink:href="#linear-gradient-4" />
+    <linearGradient
+       id="linear-gradient-7"
+       x1="289.81"
+       y1="267.57001"
+       x2="216.64"
+       y2="267.57001"
+       xlink:href="#linear-gradient-4" />
+    <linearGradient
+       id="linear-gradient-8"
+       x1="392.56"
+       y1="267.57001"
+       x2="319.39999"
+       y2="267.57001"
+       xlink:href="#linear-gradient-4" />
+    <linearGradient
+       id="linear-gradient-9"
+       x1="495.31"
+       y1="267.57001"
+       x2="422.14999"
+       y2="267.57001"
+       xlink:href="#linear-gradient-4" />
+    <linearGradient
+       id="linear-gradient-10"
+       x1="598.06"
+       y1="267.57001"
+       x2="524.90002"
+       y2="267.57001"
+       xlink:href="#linear-gradient-4" />
+    <linearGradient
+       inkscape:collect="always"
+       xlink:href="#linear-gradient-4"
+       id="linearGradient477"
+       gradientUnits="userSpaceOnUse"
+       x1="392.56"
+       y1="164.23"
+       x2="319.39999"
+       y2="164.23" />
+  </defs>
+  <g
+     id="Bgrd"
+     transform="scale(0.34090909,0.32679739)">
+    <g
+       id="Wallpaper">
+      <rect
+         id="rect3045"
+         class="cls-1"
+         width="792"
+         height="612"
+         style="fill:url(#linear-gradient)"
+         x="0"
+         y="0" />
+    </g>
+  </g>
+  <g
+     id="Artwork"
+     transform="matrix(0.31297816,0,0,0.31297816,11.043435,4.1316606)">
+    <path
+       id="rect3061"
+       class="cls-2"
+       d="m 24.48,18.75 h 743.15 a 10,10 0 0 1 10,10 V 96.5 H 14.48 V 28.75 a 10,10 0 0 1 10,-10 z" />
+    <rect
+       id="rect3063"
+       class="cls-3"
+       x="14.48"
+       y="96.5"
+       width="161.73"
+       height="497.37" />
+    <rect
+       id="rect3065"
+       class="cls-4"
+       x="14.48"
+       y="216.35001"
+       width="161.73"
+       height="51.209999" />
+    <rect
+       id="rect3065-2"
+       data-name="rect3065"
+       class="cls-5"
+       x="14.48"
+       y="216.35001"
+       width="6.5900002"
+       height="51.209999" />
+    <rect
+       id="rect3069"
+       class="cls-6"
+       x="185.75999"
+       y="96.5"
+       width="590.78998"
+       height="497.37" />
+    <path
+       id="rect3071"
+       class="cls-7"
+       d="m 225.35,38 h 196.81 a 1.69,1.69 0 0 1 1.78,1.59 v 33.26 a 1.69,1.69 0 0 1 -1.78,1.59 H 225.35 a 1.68,1.68 0 0 1 -1.77,-1.59 V 39.61 A 1.68,1.68 0 0 1 225.35,38 Z" />
+    <path
+       id="rect3071-2"
+       data-name="rect3071"
+       class="cls-6"
+       d="m 430.81,38 h 37.84 a 1.68,1.68 0 0 1 1.77,1.59 v 33.26 a 1.68,1.68 0 0 1 -1.77,1.59 H 430.81 A 1.68,1.68 0 0 1 429,72.85 V 39.61 A 1.68,1.68 0 0 1 430.81,38 Z" />
+    <path
+       id="rect3071-3"
+       data-name="rect3071"
+       class="cls-6"
+       d="m 525.05,38 h 39.35 a 1.73,1.73 0 0 1 1.84,1.59 v 33.26 a 1.73,1.73 0 0 1 -1.84,1.59 h -39.35 a 1.73,1.73 0 0 1 -1.84,-1.59 V 39.61 A 1.73,1.73 0 0 1 525.05,38 Z" />
+    <path
+       id="rect3071-4"
+       data-name="rect3071"
+       class="cls-6"
+       d="m 571.54,38 h 39.35 a 1.73,1.73 0 0 1 1.85,1.59 v 33.26 a 1.73,1.73 0 0 1 -1.85,1.59 H 571.54 A 1.73,1.73 0 0 1 569.7,72.85 V 39.61 A 1.73,1.73 0 0 1 571.54,38 Z" />
+    <path
+       id="rect3071-5"
+       data-name="rect3071"
+       class="cls-8"
+       d="m 637.24,38 h 39.35 a 1.73,1.73 0 0 1 1.84,1.59 v 33.26 a 1.73,1.73 0 0 1 -1.84,1.59 H 637.24 A 1.73,1.73 0 0 1 635.4,72.85 V 39.61 A 1.73,1.73 0 0 1 637.24,38 Z" />
+    <path
+       id="rect3288"
+       class="cls-9"
+       d="m 36,38 h 37.69 a 1.83,1.83 0 0 1 2,1.59 v 33.26 a 1.83,1.83 0 0 1 -2,1.59 H 36 A 1.83,1.83 0 0 1 34,72.85 V 39.61 A 1.83,1.83 0 0 1 36,38 Z" />
+    <path
+       id="rect3288-2"
+       data-name="rect3288"
+       class="cls-9"
+       d="m 83.44,38 h 37.67 a 1.83,1.83 0 0 1 2,1.59 v 33.26 a 1.83,1.83 0 0 1 -2,1.59 H 83.44 a 1.83,1.83 0 0 1 -2,-1.59 V 39.61 a 1.83,1.83 0 0 1 2,-1.61 z" />
+    <path
+       id="rect3290"
+       class="cls-6"
+       d="m 138.71,38 h 79.72 a 1.68,1.68 0 0 1 1.77,1.59 v 33.26 a 1.68,1.68 0 0 1 -1.77,1.59 h -79.72 a 1.69,1.69 0 0 1 -1.78,-1.59 V 39.61 A 1.69,1.69 0 0 1 138.71,38 Z" />
+    <rect
+       id="rect39"
+       class="cls-8"
+       x="14.48"
+       y="583.71997"
+       width="762.60999"
+       height="10.14" />
+    <rect
+       id="rect39-2"
+       data-name="rect39"
+       class="cls-8"
+       x="176.21001"
+       y="96.5"
+       width="9.5600004"
+       height="487.78" />
+    <rect
+       id="rect39-3"
+       data-name="rect39"
+       class="cls-8"
+       x="767.94"
+       y="96.5"
+       width="9.5600004"
+       height="497.37" />
+    <circle
+       class="cls-5"
+       cx="743.63"
+       cy="54.419998"
+       r="12.5"
+       id="circle51" />
+    <path
+       id="rect3071-6"
+       data-name="rect3071"
+       class="cls-10"
+       d="m 219.78,134.73 h 66.9 a 3,3 0 0 1 3.13,2.75 v 57.62 a 3,3 0 0 1 -3.13,2.76 h -66.9 a 3,3 0 0 1 -3.14,-2.76 v -57.62 a 3,3 0 0 1 3.14,-2.75 z"
+       style="fill:url(#linear-gradient-2)" />
+    <path
+       id="rect3071-7"
+       data-name="rect3071"
+       class="cls-11"
+       d="m 230.88,134.73 h 56.29 a 2.69,2.69 0 0 1 2.64,2.75 v 57.62 a 2.7,2.7 0 0 1 -2.64,2.76 h -56.29 a 2.7,2.7 0 0 1 -2.64,-2.76 v -57.62 a 2.69,2.69 0 0 1 2.64,-2.75 z"
+       style="fill:url(#linear-gradient-3)" />
+    <path
+       id="rect3071-8"
+       data-name="rect3071"
+       class="cls-12"
+       d="m 322.53,130.6 h 22.92 l 7.15,4.13 h 36.83 a 3,3 0 0 1 3.13,2.75 v 57.62 a 3,3 0 0 1 -3.13,2.76 h -66.9 a 3,3 0 0 1 -3.13,-2.76 v -61.75 a 3,3 0 0 1 3.13,-2.75 z"
+       style="fill:url(#linearGradient477)" />
+    <path
+       id="rect3071-9"
+       data-name="rect3071"
+       class="cls-13"
+       d="m 322.53,146.06 h 30.07 l 8.69,-6.08 h 28.14 c 1.73,0 3.13,1 3.13,2.26 v 53.36 c 0,1.25 -1.4,2.26 -3.13,2.26 h -66.9 c -1.73,0 -3.13,-1 -3.13,-2.26 v -47.29 c 0,-1.24 1.4,-2.25 3.13,-2.25 z" />
+    <path
+       id="rect3071-10"
+       data-name="rect3071"
+       class="cls-14"
+       d="m 425.28,130.6 h 22.92 l 7.15,4.13 h 36.83 a 3,3 0 0 1 3.13,2.75 v 57.62 a 3,3 0 0 1 -3.13,2.76 h -66.9 a 3,3 0 0 1 -3.13,-2.76 v -61.75 a 3,3 0 0 1 3.13,-2.75 z"
+       style="fill:url(#linear-gradient-5)" />
+    <path
+       id="rect3071-11"
+       data-name="rect3071"
+       class="cls-13"
+       d="m 425.28,146.06 h 30.07 L 464,140 h 28.14 c 1.73,0 3.13,1 3.13,2.26 v 53.34 c 0,1.25 -1.4,2.26 -3.13,2.26 h -66.9 c -1.73,0 -3.13,-1 -3.13,-2.26 v -47.29 c 0.04,-1.24 1.44,-2.25 3.17,-2.25 z" />
+    <path
+       id="rect3071-12"
+       data-name="rect3071"
+       class="cls-15"
+       d="m 528,130.6 h 23 l 7.15,4.13 h 36.83 a 3,3 0 0 1 3.13,2.75 v 57.62 a 3,3 0 0 1 -3.13,2.76 H 528 a 3,3 0 0 1 -3.13,-2.76 V 133.35 A 3,3 0 0 1 528,130.6 Z"
+       style="fill:url(#linear-gradient-6)" />
+    <path
+       id="rect3071-13"
+       data-name="rect3071"
+       class="cls-13"
+       d="m 528,146.06 h 30.1 l 8.69,-6.08 h 28.14 c 1.73,0 3.13,1 3.13,2.26 v 53.36 c 0,1.25 -1.4,2.26 -3.13,2.26 H 528 c -1.73,0 -3.13,-1 -3.13,-2.26 v -47.29 c 0.03,-1.24 1.43,-2.25 3.13,-2.25 z" />
+    <path
+       id="rect3071-14"
+       data-name="rect3071"
+       class="cls-16"
+       d="m 219.78,233.94 h 22.92 l 7.15,4.13 h 36.83 a 3,3 0 0 1 3.13,2.76 v 57.62 a 3,3 0 0 1 -3.13,2.75 h -66.9 a 3,3 0 0 1 -3.14,-2.75 v -61.76 a 3,3 0 0 1 3.14,-2.75 z"
+       style="fill:url(#linear-gradient-7)" />
+    <path
+       id="rect3071-15"
+       data-name="rect3071"
+       class="cls-13"
+       d="m 219.78,249.4 h 30.07 l 8.69,-6.08 h 28.14 c 1.73,0 3.13,1 3.13,2.26 v 53.36 c 0,1.25 -1.4,2.26 -3.13,2.26 h -66.9 c -1.73,0 -3.14,-1 -3.14,-2.26 v -47.28 c 0,-1.25 1.41,-2.26 3.14,-2.26 z" />
+    <path
+       id="rect3071-16"
+       data-name="rect3071"
+       class="cls-17"
+       d="m 322.53,233.94 h 22.92 l 7.15,4.13 h 36.83 a 3,3 0 0 1 3.13,2.76 v 57.62 a 3,3 0 0 1 -3.13,2.75 h -66.9 a 3,3 0 0 1 -3.13,-2.75 v -61.76 a 3,3 0 0 1 3.13,-2.75 z"
+       style="fill:url(#linear-gradient-8)" />
+    <path
+       id="rect3071-17"
+       data-name="rect3071"
+       class="cls-13"
+       d="m 322.53,249.4 h 30.07 l 8.69,-6.08 h 28.14 c 1.73,0 3.13,1 3.13,2.26 v 53.36 c 0,1.25 -1.4,2.26 -3.13,2.26 h -66.9 c -1.73,0 -3.13,-1 -3.13,-2.26 v -47.28 c 0,-1.25 1.4,-2.26 3.13,-2.26 z" />
+    <path
+       id="rect3071-18"
+       data-name="rect3071"
+       class="cls-18"
+       d="m 425.28,233.94 h 22.92 l 7.15,4.13 h 36.83 a 3,3 0 0 1 3.13,2.76 v 57.62 a 3,3 0 0 1 -3.13,2.75 h -66.9 a 3,3 0 0 1 -3.13,-2.75 v -61.76 a 3,3 0 0 1 3.13,-2.75 z"
+       style="fill:url(#linear-gradient-9)" />
+    <path
+       id="rect3071-19"
+       data-name="rect3071"
+       class="cls-13"
+       d="m 425.28,249.4 h 30.07 l 8.69,-6.08 h 28.14 c 1.73,0 3.13,1 3.13,2.26 v 53.36 c 0,1.25 -1.4,2.26 -3.13,2.26 h -66.9 c -1.73,0 -3.13,-1 -3.13,-2.26 v -47.28 c 0,-1.25 1.4,-2.26 3.13,-2.26 z" />
+    <path
+       id="rect3071-20"
+       data-name="rect3071"
+       class="cls-19"
+       d="m 528,233.94 h 23 l 7.15,4.13 h 36.83 a 3,3 0 0 1 3.13,2.76 v 57.62 a 3,3 0 0 1 -3.13,2.75 H 528 a 3,3 0 0 1 -3.13,-2.75 v -61.76 a 3,3 0 0 1 3.13,-2.75 z"
+       style="fill:url(#linear-gradient-10)" />
+    <path
+       id="rect3071-21"
+       data-name="rect3071"
+       class="cls-13"
+       d="m 528,249.4 h 30.1 l 8.69,-6.08 h 28.14 c 1.73,0 3.13,1 3.13,2.26 v 53.36 c 0,1.25 -1.4,2.26 -3.13,2.26 H 528 c -1.73,0 -3.13,-1 -3.13,-2.26 v -47.28 c 0.03,-1.25 1.43,-2.26 3.13,-2.26 z" />
+    <path
+       class="cls-20"
+       d="m 748.35,115.48 h -74 L 656.91,98 639.49,115.49 h -74 a 4,4 0 0 0 -4,4 V 413.7 a 4,4 0 0 0 4,4 h 182.86 a 4,4 0 0 0 4,-4 V 119.49 a 4,4 0 0 0 -4,-4.01 z"
+       id="path69" />
+    <path
+       id="rect3071-22"
+       data-name="rect3071"
+       class="cls-21"
+       d="m 576.11,136.29 h 48.27 c 1.24,0 2.26,0.72 2.26,1.6 v 33.57 c 0,0.88 -1,1.6 -2.26,1.6 h -48.27 c -1.24,0 -2.26,-0.72 -2.26,-1.6 v -33.57 c 0,-0.89 1.02,-1.6 2.26,-1.6 z" />
+    <path
+       id="rect3071-23"
+       data-name="rect3071"
+       class="cls-6"
+       d="m 633.14,136.29 h 48.26 c 1.25,0 2.26,0.72 2.26,1.6 v 33.57 c 0,0.88 -1,1.6 -2.26,1.6 h -48.26 c -1.25,0 -2.26,-0.72 -2.26,-1.6 v -33.57 c 0,-0.89 1.01,-1.6 2.26,-1.6 z" />
+    <path
+       id="rect3071-24"
+       data-name="rect3071"
+       class="cls-6"
+       d="m 690.17,136.29 h 48.26 c 1.25,0 2.26,0.72 2.26,1.6 v 33.57 c 0,0.88 -1,1.6 -2.26,1.6 h -48.26 c -1.25,0 -2.26,-0.72 -2.26,-1.6 v -33.57 c 0,-0.89 1.01,-1.6 2.26,-1.6 z" />
+  </g>
+</svg>
diff --git a/panels/ubuntu/ubuntu.gresource.xml b/panels/ubuntu/ubuntu.gresource.xml
new file mode 100644
index 0000000..77d4e61
--- /dev/null
+++ b/panels/ubuntu/ubuntu.gresource.xml
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<gresources>
+  <gresource prefix="/org/gnome/control-center/ubuntu">
+    <file preprocess="xml-stripblanks">cc-ubuntu-panel.ui</file>
+    <file>theme-dark.svg</file>
+    <file>theme-light.svg</file>
+  </gresource>
+</gresources>
diff --git a/po/POTFILES.in b/po/POTFILES.in
index b9d65b7..0a0575c 100644
--- a/po/POTFILES.in
+++ b/po/POTFILES.in
@@ -220,6 +220,9 @@ panels/thunderbolt/cc-bolt-device-entry.c
 panels/thunderbolt/cc-bolt-panel.c
 panels/thunderbolt/cc-bolt-panel.ui
 panels/thunderbolt/gnome-thunderbolt-panel.desktop.in.in
+panels/ubuntu/cc-ubuntu-panel.c
+panels/ubuntu/cc-ubuntu-panel.ui
+panels/ubuntu/gnome-ubuntu-panel.desktop.in.in
 panels/universal-access/cc-cursor-blinking-dialog.ui
 panels/universal-access/cc-cursor-size-dialog.ui
 panels/universal-access/cc-pointing-dialog.ui
diff --git a/shell/cc-panel-list.c b/shell/cc-panel-list.c
index c5532ba..a9e8639 100644
--- a/shell/cc-panel-list.c
+++ b/shell/cc-panel-list.c
@@ -385,6 +385,7 @@ static const gchar * const panel_order[] = {
   "mobile-broadband",
   "bluetooth",
   "background",
+  "ubuntu",
   "notifications",
   "search",
   "multitasking",
diff --git a/shell/cc-panel-loader.c b/shell/cc-panel-loader.c
index 67f3f1b..b571ceb 100644
--- a/shell/cc-panel-loader.c
+++ b/shell/cc-panel-loader.c
@@ -61,6 +61,7 @@ extern GType cc_sound_panel_get_type (void);
 extern GType cc_bolt_panel_get_type (void);
 #endif /* BUILD_THUNDERBOLT */
 extern GType cc_ua_panel_get_type (void);
+extern GType cc_ubuntu_panel_get_type(void);
 extern GType cc_user_panel_get_type (void);
 #ifdef BUILD_WACOM
 extern GType cc_wacom_panel_get_type (void);
@@ -86,6 +87,7 @@ extern void cc_wacom_panel_static_init_func (void);
 #ifdef BUILD_WWAN
 extern void cc_wwan_panel_static_init_func (void);
 #endif /* BUILD_WWAN */
+extern void cc_ubuntu_panel_static_init_func (void);
 
 #define PANEL_TYPE(name, get_type, init_func) { name, get_type, init_func }
 
@@ -128,6 +130,7 @@ static CcPanelLoaderVtable default_panels[] =
   PANEL_TYPE("search",           cc_search_panel_get_type,               NULL),
   PANEL_TYPE("sharing",          cc_sharing_panel_get_type,              NULL),
   PANEL_TYPE("sound",            cc_sound_panel_get_type,                NULL),
+  PANEL_TYPE("ubuntu",           cc_ubuntu_panel_get_type,               cc_ubuntu_panel_static_init_func),
 #ifdef BUILD_THUNDERBOLT
   PANEL_TYPE("thunderbolt",      cc_bolt_panel_get_type,                 NULL),
 #endif
