Description: Write new glib url handling values back to gconf for compatibility
 This patch can go away in Ubuntu 11.10 because by then, gnome-control-center
 will be all gsettings.  This is just to provide a bridge between the new glib
 and any program still listening to the old gconf values.  This only sets the
 values, it does not read them.
Author: Michael Terry <michael.terry@canonical.com>
Forwarded: not-needed

Index: gnome-control-center-2.32.1/capplets/default-applications/gnome-da-capplet.c
===================================================================
--- gnome-control-center-2.32.1.orig/capplets/default-applications/gnome-da-capplet.c	2011-01-06 09:04:37.637883006 -0500
+++ gnome-control-center-2.32.1/capplets/default-applications/gnome-da-capplet.c	2011-01-06 09:37:03.383415569 -0500
@@ -64,6 +64,47 @@
 }
 
 static void
+web_combo_write_to_gconf (GtkComboBox *combo, GnomeDACapplet *capplet)
+{
+    guint current_index;
+
+    current_index = gtk_combo_box_get_active (combo);
+
+    if (current_index < g_list_length (capplet->web_browsers)) {
+        GnomeDAURLItem *item;
+        GConfChangeSet *cs;
+        gchar *short_browser, *pos;
+
+        item = (GnomeDAURLItem*) g_list_nth_data (capplet->web_browsers, current_index);
+        if (item == NULL)
+            return;
+
+        cs = gconf_change_set_new ();
+        gconf_change_set_set_string (cs, DEFAULT_APPS_KEY_HTTP_EXEC, item->generic.command);
+        gconf_change_set_set_string (cs, DEFAULT_APPS_KEY_HTTPS_EXEC, item->generic.command);
+        gconf_change_set_set_string (cs, DEFAULT_APPS_KEY_ABOUT_EXEC, item->generic.command);
+        gconf_change_set_set_string (cs, DEFAULT_APPS_KEY_UNKNOWN_EXEC, item->generic.command);
+
+        pos = strstr (item->generic.command, " ");
+        if (pos == NULL)
+            short_browser = g_strdup (item->generic.command);
+        else
+            short_browser = g_strndup (item->generic.command, pos - item->generic.command);
+        gconf_change_set_set_string (cs, DEFAULT_APPS_KEY_BROWSER_EXEC, short_browser);
+        g_free (short_browser);
+
+        gconf_change_set_set_bool (cs, DEFAULT_APPS_KEY_BROWSER_NREMOTE, FALSE);
+        gconf_change_set_set_bool (cs, DEFAULT_APPS_KEY_HTTP_NEEDS_TERM, FALSE);
+        gconf_change_set_set_bool (cs, DEFAULT_APPS_KEY_HTTPS_NEEDS_TERM, FALSE);
+        gconf_change_set_set_bool (cs, DEFAULT_APPS_KEY_ABOUT_NEEDS_TERM, FALSE);
+        gconf_change_set_set_bool (cs, DEFAULT_APPS_KEY_UNKNOWN_NEEDS_TERM, FALSE);
+        gconf_change_set_set_bool (cs, DEFAULT_APPS_KEY_BROWSER_NEEDS_TERM, FALSE);
+        gconf_client_commit_change_set (capplet->gconf, cs, TRUE, NULL);
+        gconf_change_set_unref (cs);
+    }
+}
+
+static void
 web_combo_changed_cb (GtkComboBox *combo, GnomeDACapplet *capplet)
 {
     guint current_index;
@@ -84,6 +125,29 @@
 	    g_error_free (error);
 	}
     }
+	web_combo_write_to_gconf (combo, capplet);
+}
+
+static void
+mail_combo_write_to_gconf (GtkComboBox *combo, GnomeDACapplet *capplet)
+{
+    guint current_index;
+
+    current_index = gtk_combo_box_get_active (combo);
+
+    if (current_index < g_list_length (capplet->mail_readers)) {
+        GnomeDAURLItem *item;
+        GConfClient *client;
+
+        item = (GnomeDAURLItem*) g_list_nth_data (capplet->mail_readers, current_index);
+        if (item == NULL)
+            return;
+
+        client = gconf_client_get_default ();
+        gconf_client_set_string (client, DEFAULT_APPS_KEY_MAILER_EXEC, item->generic.command, NULL);
+        gconf_client_set_bool (client, DEFAULT_APPS_KEY_MAILER_NEEDS_TERM, FALSE, NULL);
+        g_object_unref (client);
+    }
 }
 
 /* FIXME: Refactor these two functions below into one... */
@@ -106,6 +170,7 @@
             g_warning (_("Error setting default mailer: %s"), error->message);
 	    g_error_free (error);
 	}
+	mail_combo_write_to_gconf (combo, capplet);
     }
 
 }
@@ -495,6 +560,9 @@
     set_combo_to_default_for_scheme (GTK_COMBO_BOX (capplet->web_combo_box), capplet->web_browsers, "http");
     set_combo_to_default_for_scheme (GTK_COMBO_BOX (capplet->mail_combo_box), capplet->mail_readers, "mailto");
 
+    web_combo_write_to_gconf (GTK_COMBO_BOX (capplet->web_combo_box), capplet);
+    mail_combo_write_to_gconf (GTK_COMBO_BOX (capplet->mail_combo_box), capplet);
+
     g_signal_connect (capplet->web_combo_box, "changed", G_CALLBACK (web_combo_changed_cb), capplet);
     g_signal_connect (capplet->mail_combo_box, "changed", G_CALLBACK (mail_combo_changed_cb), capplet);
     g_signal_connect (capplet->term_combo_box, "changed", G_CALLBACK (terminal_combo_changed_cb), capplet);
