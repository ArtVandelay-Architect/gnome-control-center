Description: set a white bg for the lists when using the ubuntu theme, 
 that's a workaround for artful to not modify the theme which could 
 impact other softwares 
Origin: ubuntu
Bug-Ubuntu: https://launchpad.net/bugs/1719668
Index: gnome-control-center-3.26.1/shell/cc-application.c
===================================================================
--- gnome-control-center-3.26.1.orig/shell/cc-application.c
+++ gnome-control-center-3.26.1/shell/cc-application.c
@@ -208,6 +208,54 @@ cc_application_activate (GApplication *a
 }
 
 static void
+theme_changed (GtkSettings *settings)
+{
+    static GtkCssProvider *provider = NULL;
+    static GtkCssProvider *permanent_provider = NULL;
+    gchar *theme;
+    GdkScreen *screen;
+
+    g_object_get (settings, "gtk-theme-name", &theme, NULL);
+    screen = gdk_screen_get_default ();
+
+    if (g_getenv ("GTK_THEME")) {
+        g_free (theme);
+        *theme = g_strdup (g_getenv ("GTK_THEME"));
+        if (theme && *theme) {
+            char *p;
+            p = strrchr (theme, ':');
+            if (p) {
+                *p = '\0';
+                p++;
+                *theme = g_strdup (p);
+            }
+        }
+    }
+
+    /* CSS that themes can override */
+    if (g_str_equal (theme, "Ambiance") || g_str_equal (theme, "Radiance"))
+    {
+        if (provider == NULL)
+        {
+            provider = gtk_css_provider_new ();
+            gtk_css_provider_load_from_data (provider, "frame list row:nth-child(even):not(:selected), viewport > list row:nth-child(even):not(:selected) { background: white }", -1, NULL);
+        }
+
+        gtk_style_context_add_provider_for_screen (screen,
+                                                   GTK_STYLE_PROVIDER (provider),
+                                                   GTK_STYLE_PROVIDER_PRIORITY_APPLICATION);
+    }
+    else if (provider != NULL)
+    {
+        gtk_style_context_remove_provider_for_screen (screen,
+                                                      GTK_STYLE_PROVIDER (provider));
+        g_clear_object (&provider);
+    }
+
+    g_free (theme);
+}
+
+static void
 cc_application_startup (GApplication *application)
 {
   CcApplication *self = CC_APPLICATION (application);
@@ -215,6 +263,7 @@ cc_application_startup (GApplication *ap
   GMenu *section;
   GSimpleAction *action;
   const gchar *help_accels[] = { "F1", NULL };
+  GtkSettings *settings;
 
   G_APPLICATION_CLASS (cc_application_parent_class)->startup (application);
 
@@ -261,6 +310,10 @@ cc_application_startup (GApplication *ap
                                          "app.help", help_accels);
 
   self->priv->window = cc_window_new (GTK_APPLICATION (application));
+
+  settings = gtk_settings_get_default ();
+  g_signal_connect (settings, "notify::gtk-theme-name", G_CALLBACK (theme_changed), NULL);
+  theme_changed (settings);
 }
 
 static GObject *
