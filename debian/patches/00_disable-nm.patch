Index: gnome-control-center-3.0.0.1/configure.ac
===================================================================
--- gnome-control-center-3.0.0.1.orig/configure.ac
+++ gnome-control-center-3.0.0.1/configure.ac
@@ -123,11 +123,7 @@
 GDESKTOP_PREFIX=`$PKG_CONFIG --variable prefix gsettings-desktop-schemas`
 AC_SUBST(GDESKTOP_PREFIX)
 
-# Check for NetworkManager ~0.9
-PKG_CHECK_MODULES(NETWORK_MANAGER, NetworkManager >= $NETWORK_MANAGER_REQUIRED_VERSION
-                  libnm-glib >= $NETWORK_MANAGER_REQUIRED_VERSION
-                  libnm-util >= $NETWORK_MANAGER_REQUIRED_VERSION,
-                  [have_networkmanager=yes], have_networkmanager=no)
+have_networkmanager=yes
 if test "x$have_networkmanager" = xno ; then
         AC_MSG_WARN(*** Network panel will not be built (NetworkManager ~0.9 or newer not found) ***)
 fi
Index: gnome-control-center-3.0.0.1/panels/network/Makefile.am
===================================================================
--- gnome-control-center-3.0.0.1.orig/panels/network/Makefile.am
+++ gnome-control-center-3.0.0.1/panels/network/Makefile.am
@@ -14,20 +14,6 @@
 
 libnetwork_la_SOURCES =					\
 	network-module.c				\
-	panel-common.c					\
-	panel-common.h					\
-	net-object.c					\
-	net-object.h					\
-	net-device.c					\
-	net-device.h					\
-	net-vpn.c					\
-	net-vpn.h					\
-	panel-cell-renderer-mode.c			\
-	panel-cell-renderer-mode.h			\
-	panel-cell-renderer-security.c			\
-	panel-cell-renderer-security.h			\
-	panel-cell-renderer-signal.c			\
-	panel-cell-renderer-signal.h			\
 	cc-network-panel.c				\
 	cc-network-panel.h
 
Index: gnome-control-center-3.0.0.1/panels/network/cc-network-panel.c
===================================================================
--- gnome-control-center-3.0.0.1.orig/panels/network/cc-network-panel.c
+++ gnome-control-center-3.0.0.1/panels/network/cc-network-panel.c
@@ -25,6 +25,7 @@
 
 #include "cc-network-panel.h"
 
+#if 0
 #include "nm-remote-settings.h"
 #include "nm-client.h"
 #include "nm-device.h"
@@ -48,6 +49,7 @@
 #include "panel-cell-renderer-mode.h"
 #include "panel-cell-renderer-signal.h"
 #include "panel-cell-renderer-security.h"
+#endif
 
 G_DEFINE_DYNAMIC_TYPE (CcNetworkPanel, cc_network_panel, CC_TYPE_PANEL)
 
@@ -59,8 +61,6 @@
         GCancellable     *cancellable;
         GSettings        *proxy_settings;
         GtkBuilder       *builder;
-        NMClient         *client;
-        NMRemoteSettings *remote_settings;
         gboolean          updating_device;
 };
 
@@ -83,7 +83,6 @@
 };
 
 static void     refresh_ui      (CcNetworkPanel *panel);
-static NetObject *find_in_model_by_id (CcNetworkPanel *panel, const gchar *id);
 
 static void
 cc_network_panel_get_property (GObject    *object,
@@ -127,6 +126,7 @@
                 g_object_unref (priv->builder);
                 priv->builder = NULL;
         }
+#if 0
         if (priv->client != NULL) {
                 g_object_unref (priv->client);
                 priv->client = NULL;
@@ -135,6 +135,7 @@
                 g_object_unref (priv->remote_settings);
                 priv->remote_settings = NULL;
         }
+#endif
 
         G_OBJECT_CLASS (cc_network_panel_parent_class)->dispose (object);
 }
@@ -216,6 +217,7 @@
         check_wpad_warning (panel);
 }
 
+#if 0
 static NetObject *
 get_selected_object (CcNetworkPanel *panel)
 {
@@ -238,6 +240,7 @@
 
         return object;
 }
+#endif
 
 static void
 panel_proxy_mode_combo_setup_widgets (CcNetworkPanel *panel, guint value)
@@ -367,6 +370,7 @@
         gtk_tree_path_free (path);
 }
 
+#if 0
 static void
 panel_device_got_modem_manager_cb (GObject *source_object,
                                    GAsyncResult *res,
@@ -636,6 +640,7 @@
                 g_object_unref (object_tmp);
         } while (gtk_tree_model_iter_next (model, &iter));
 }
+#endif
 
 static void
 panel_add_devices_columns (CcNetworkPanel *panel, GtkTreeView *treeview)
@@ -671,6 +676,7 @@
         gtk_tree_view_column_set_expand (column, TRUE);
 }
 
+#if 0
 static void
 panel_set_widget_data (CcNetworkPanel *panel,
                        const gchar *sub_pane,
@@ -1666,6 +1672,7 @@
                                "group_password",
                                 net_vpn_get_password (vpn));
 }
+#endif
 
 static void
 refresh_ui (CcNetworkPanel *panel)
@@ -1674,7 +1681,7 @@
         GtkTreeIter iter;
         GtkTreeModel *model;
         GtkWidget *widget;
-        NetObject *object = NULL;
+        void *object = NULL;
         CcNetworkPanelPrivate *priv = panel->priv;
 
         widget = GTK_WIDGET (gtk_builder_get_object (panel->priv->builder,
@@ -1687,8 +1694,6 @@
                 goto out;
         }
 
-        object = get_selected_object (panel);
-
         /* this is the proxy settings device */
         if (object == NULL) {
 
@@ -1723,6 +1728,7 @@
                 goto out;
         }
 
+#if 0
         /* VPN */
         if (NET_IS_VPN (object)) {
                 nm_device_refresh_vpn_ui (panel, NET_VPN (object));
@@ -1745,6 +1751,7 @@
                 /* refresh device */
                 nm_device_refresh_device_ui (panel, NET_DEVICE (object));
         }
+#endif
 out:
         return;
 }
@@ -1778,6 +1785,7 @@
         g_free (title);
 }
 
+#if 0
 static void
 cc_network_panel_notify_enable_active_cb (GtkSwitch *sw,
                                           GParamSpec *pspec,
@@ -2144,24 +2152,17 @@
                 return;
         }
 }
+#endif
 
 static void
 on_toplevel_map (GtkWidget      *widget,
                  CcNetworkPanel *panel)
 {
-        gboolean ret;
-
-        /* is the user compiling against a new version, but running an
-         * old daemon version? */
-        ret = panel_check_network_manager_version (panel);
-        if (ret) {
-                manager_running (panel->priv->client, NULL, panel);
-        } else {
-                /* just select the proxy settings */
-                select_first_device (panel);
-        }
+        /* just select the proxy settings */
+        select_first_device (panel);
 }
 
+#if 0
 static void
 connection_activate_cb (NMClient *client,
                         NMActiveConnection *connection,
@@ -2275,11 +2276,11 @@
         g_free (ssid_target);
         g_free (object_path);
 }
+#endif
 
 static void
 cc_network_panel_init (CcNetworkPanel *panel)
 {
-        DBusGConnection *bus = NULL;
         gboolean ret;
         GError *error = NULL;
         gint value;
@@ -2406,6 +2407,7 @@
         /* add the virtual proxy device */
         panel_add_proxy_device (panel);
 
+#if 0
         /* setup wireless combobox model */
         combobox = GTK_COMBO_BOX (gtk_builder_get_object (panel->priv->builder,
                                                           "combobox_wireless_network_name"));
@@ -2535,6 +2537,7 @@
                           G_CALLBACK (notify_connections_read_cb), panel);
         g_signal_connect (panel->priv->remote_settings, NM_REMOTE_SETTINGS_NEW_CONNECTION,
                           G_CALLBACK (notify_new_connection_cb), panel);
+#endif
 
         toplevel = gtk_widget_get_toplevel (GTK_WIDGET (panel));
         g_signal_connect_after (toplevel, "map", G_CALLBACK (on_toplevel_map), panel);
